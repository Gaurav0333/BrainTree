{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/braintreeUtils.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/loaderHelper.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/helper.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/paypal/paypalHelper.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/braintreeCreditCard.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/braintreePaypal.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/googlepay/googlepayHelper.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/creditcard/creditcardHelper.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/braintreeGooglepay.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/creditcard/creditcardFields.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/paypal/paypalSavedAccountHandler.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/braintreeVenmo.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/venmo/venmoHelper.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/applepay/applepayHelper.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/braintreeApplepay.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/braintreeLocal.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/braintreeMFRA.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/creditcard/creditcardPayment.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/creditcard/creditcardAccount.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/paypal/minicartHelper.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/paypal/paypalAccount.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/paypal/paypalPayment.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/local/localPayment.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/venmo/venmoAccount.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/venmo/venmoPayment.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/googlepay/googlepayAccount.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/googlepay/googlepayPayment.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/src/srcPayment.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/braintreeSrc.js","webpack:///./cartridges/app_storefront_base/cartridge/client/default/js/components/scrollAnimate.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/int_braintree.js","webpack:///./cartridges/int_braintree/cartridge/client/default/js/braintree/src/srcHelper.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","console","consoleLog","log","consoleError","error","apply","arguments","bu","pdpOnlickForAsignedPaypalPayment","$bundleItem","$","pid","data","$productContainer","closest","form","quantity","val","length","items","map","this","find","text","parseInt","childProducts","JSON","stringify","toArray","options","$elOption","urlValue","selectedValueId","optionId","getOptions","response","ajax","url","method","async","responseJSON","getSelectedData","selectEl","getElementsByTagName","option","selected","attributes","postData","formData","FormData","append","processData","contentType","type","success","res","window","location","href","redirectUrl","reload","messages","errorInstances","createErrorInstance","containerElement","callback","Constructor","cb","push","containerEl","show","code","message","style","display","innerHTML","hide","clientToken","$continueButton","document","querySelector","continueButtonToggle","flag","stage","hash","substring","accountsLoader","loaderInstance","removeBtPayment","e","target","$loaderContainter","getAttribute","then","UUID","remove","newDefaultPaypalAccount","newDefaultCreditCard","fontWeight","fail","initWathcherCartUpdate","$grantTotal","currentGrantTotalValue","textContent","on","newGrantTotalValue","updateCartTotals","createEvent","initEvent","addEventListener","dispatchEvent","paymentMethodChangeHandle","currentTab","querySelectorAll","forEach","el","$tabContent","tab","removeAttribute","setAttribute","parse","updateCheckoutView","paymentMethodName","paymentMethod","$paymentSummary","htmlToAppend","order","billing","payment","selectedPaymentInstruments","split","element","index","charAt","slice","toLocaleLowerCase","creditCardNumber","gpCardDescription","gpCardDescriptionData","priceTotal","amount","isValidInputField","field","checkValidity","classList","contains","add","updatePaymentMethodTab","dataset","braintreePaymentMethod","toLowerCase","children","click","getBillingAddressFormValues","serialize","reduce","accumulator","item","elem","lastIndexOf","createPaymentFormData","paymentFields","fieldsData","paymentFieldsParsed","entries","entry","initCardEvents","onclick","id","loader","cardToRemoveDefaultProperty","isNonceExist","$nonce","isActiveTab","nonceValue","$tab","braintreeUtils","$addPaypalAccountBtn","$paypalAccountWrapper","getSessionAccountOption","Array","getOptionByEmail","sessionEmail","getElementById","getOptionByDataDefault","formValidationConrol","validateActions","enable","initAccountListAndSaveFunctionality","$accountsList","isUserHasSavedAccount","$savePaypalAccountCountainer","$savePaypalAccountCheckbox","$paypalAccounMakeDefaultContainer","$paypalAccountMakeDefaultCheckbox","$alertInfo","accountsListChange","isSameSessionAccount","checked","disabled","selectedOptions","selectedAccount","createShippingAddressData","inpShippingAddress","details","shippingAddress","recipientName","firstName","lastName","email","phone","countryCodeAlpha2","countryCode","streetAddress","line1","extendedAddress","line2","locality","city","region","state","postalCode","createBillingAddressData","inpBillingAddress","billingAddress","appendToUrl","param","newUrl","indexOf","keys","encodeURIComponent","join","showPayPalAccount","braintreePaypalEmail","braintreePaypalNonce","braintreePaypalAccount","paypalAccount","$paypalContent","$braintreePaypalAccountsList","customerAuthenticated","showCartErrorMsg","addClass","scrollTo","showCheckoutErrorMsg","showPDPButton","$braintreePDPButton","hidePDPButton","updatePayPalAppearance","sessionOption","defaultOption","setSessionAccountOptionDefault","savedDefaultOption","showPaypalAccountBtn","hidePaypalAccountBtn","params","creditcardHelper","er","isFormValid","$cardOwnerEl","parentNode","validation","check3dSecureAndSubmit","startTokenizeCb","nonce","errorCode","is3dSecureEnabled","billingData","braintree","threeDSecure","authorization","version","btError","verifyCard","bin","givenName","surname","phoneNumber","address1","address2","stateCode","country","additionalInformation","shippingAdditionalInfo","onLookupComplete","next","err","liabilityShifted","isSkip3dSecureLiabilityResult","result","secure3DFailed","init","initParams","initFields","$container","creditcardErrorContainer","extend","cardOwnerEvents","hostedFieldsStyles","input","color","hostedFieldsConfig","number","selector","cvv","expirationDate","hostedFieldsAdvancedOptions","isFraudToolsEnabled","dataCollector","kount","paypal","deviceData","hostedFields","styles","fields","hostedFieldsInstance","continueButton","startTokenize","tokenize","convertCardTypeToDwFormat","cardType","lastFour","getHostedFieldInstance","updateData","uuid","removeFromCartUrl","$price","sdkUrlConfiguration","paypalHelper","isZeroAmount","$miniCartQuantity","$addToCartButton","$paypalCartButton","$paypalBillingButton","$btn","$errorContainer","createElement","className","$braintreePaypalRiskDataInput","$loaderContainer","insertBefore","nextSibling","that","riskData","client","clientInstance","paypalCheckout","paypalCheckoutInstance","cart","Error","pliUUID","actionUrls","removeProductLineItemUrl","parseFloat","totals","grandTotal","replace","createPayment","paypalButtonConfig","locale","onApprove","intent","tokenizePayment","payload","onTokenizePayment","onCancel","a","b","urlParams","dataType","spinner","stop","onError","onClick","_","actions","reject","flow","createOrder","currency","components","commit","createBillingAgreement","vault","paypalConfig","isPayPalSDKLoaded","Buttons","render","loadPayPalSDK","catch","updateAmount","updateShippingAddress","shippingAddressOverride","helper","$googlepayContent","$btGooglepayAccountsList","$googlepayButton","hideShowButtons","showGooglepayAccount","$sessionAccount","$gpAccount","createGooglepayBillingAddressData","paymentMethodData","info","administrativeArea","createGooglepayShippingAddressData","shippingData","removeSessionAccount","$creditCardList","$creditCardMakeDefault","$saveCreditCard","$cardOwner","cardOwnerUpdateClasses","cardListChange","changeCardOwnerInput","$cardOwnerPh","$cardNumbeber","$cardNumbeberPh","$cardCvv","$cardCvvPh","$cardExpiration","$cardExpirationPh","$braintreeSaveCardContainer","$creditCardFieldsContainer","$braintree3DSecureContainer","$saveCardAndDefaultContainer","Event","selectedCard","toUpperCase","errorIns","errorData","invalidFieldKeys","braintreeType","initCardListAndSaveFunctionality","createGooglepay","paymentsClient","google","payments","api","PaymentsClient","environment","clientErr","googlePayment","googlePayVersion","googlePaymentErr","googlePaymentInstance","allowedPaymentMethods","createPaymentDataRequest","isReadyToPay","apiVersion","apiVersionMinor","button","createButton","paymentDataRequest","transactionInfo","currencyCode","totalPriceStatus","totalPrice","String","shippingAddressRequired","isShippingAddressRequired","shippingAddressParameters","allowedCountryCodes","phoneNumberRequired","emailRequired","cardPaymentMethod","parameters","billingAddressRequired","billingAddressParameters","format","loadPaymentData","paymentData","parseResponse","appendChild","creditCard","getShippingAdditionalInfo","orderAddress","workPhoneNumber","shippingGivenName","shippingSurname","shippingPhone","initCreditCardFields","config","staticImageHandler","checkoutFromCartUrl","sessionStorage","setItem","paypalStaticPdpButtonHandler","$braintreeVenmoRiskDataInput","createVenmo","isBrowserSupported","dataCollectorErr","dataCollectorInstance","venmo","allowNewBrowserTab","deviceNotSupportVenmo","localStorage","ignoreHistoryChanges","venmoErr","venmoInstance","venmoAccountPage","processResultsDelay","tokenizeErr","handleVenmoSuccess","ins","$saveVenmoAccountCountainerEl","$saveVenmoAccountEl","$venmoAccounMakeDefaultEl","$venmoButton","$braintreeVenmoAccount","$venmoAccount","$braintreeVenmoUserId","$venmoContent","$addVenmoAccountBtn","$venmoAccountWrapper","showVenmoAccount","createLoaderContainter","$target","hideVenmoButton","parentElement","firstElementChild","updateBillingAddressFormValues","each","decodeURIComponent","showVenmoAccountBtn","hideVenmoAccountBtn","showVenmoAccountError","applePay","$applePayButton","$applepayButtonsWrap","$applepayDataMethod","$emailField","$phoneField","makeApplePayButtonDisabled","hideApplePayButton","showApplePayButton","initApplepayButton","isRequiredBillingContactFields","isRequiredShippingContactFields","applePayIns","startPayment","getOrderInfoUrl","braintreeApplePayBillingAddress","detail","braintreeApplePayShippingAddress","braintreeApplePayNonce","returnUrl","applepayPayment","applepayButton","appleUpdateAmountData","createApplePay","applePayInstance","createApplePaySession","paymentRequest","createPaymentRequest","total","label","displayName","requiredBillingContactFields","requiredShippingContactFields","session","ApplePaySession","onvalidatemerchant","event","performValidation","validationURL","eventError","merchantSession","abort","completeMerchantValidation","onpaymentauthorized","token","completePayment","STATUS_FAILURE","STATUS_SUCCESS","shippingContact","addressLines","familyName","emailAddress","billingContact","CustomEvent","begin","canMakePaymentsWithActiveCard","merchantIdentifier","scrollAnimate","errorText","createLocalPayment","localPayment","localPaymentInstance","emailField","localPaymentMethodName","preventDefault","getJSON","reqData","assign","paymentType","fallback","fallbackUrl","buttonText","address","createRequestData","onPaymentStart","start","processingMsg","finalProcessingMsg","paymentConfirmUrl","lpmName","responseText","updateShippingData","applepayHelper","creditcardPayment","creditCardFields","creditCardAccount","minicartHelper","paypalPayment","paypalSavedAccountHandler","orderStage","pageState","getItem","$cartPage","$summaryDetails","$addCreditCardForm","$creditCardContent","$applepayContent","$braintreePaypalNonce","$minicartPopover","$staticPaypalButton","venmoAccount","venmoPayment","googlePayAccount","googlepayPayment","googlepayHelper","$googlepayOnCart","$addGooglePayAccountForm","$braintreeGooglePayNonce","braintreeSrc","$srcContent","NodeList","bubbles","cancelable","undefined","evt","initCustomEvent","initAccountAddCreditCard","initAddGooglePayAccount","miniCartButton","observer","observe","childList","makePaypalPayment","doNotAllowSubmitForm","setTimeout","hide3DSecureContainer","isTrusted","makeCreditCardPayment","makeVenmoPayment","makeGooglepayPayment","initSrcButton","cardList","paypalList","changeEvent","removeItem","initPayPalEvents","initVenmoEvents","allowSubmitForm","getNonceUrl","cardUUID","responce","stopPropagation","submit","addCreditCardForm","attr","$paypalMinicartButton","payPal","btnInstance","braintreePaypalRiskData","billingAddressData","braintreePaypalBillingAddress","shippingAddressData","braintreePaypalShippingAddress","requestBillingAgreement","braintreeSavePaypalAccount","braintreePaypalAccountMakeDefault","paypalHandle","paypalIns","$totalPrice","MutationObserver","mutations","mutation","addedNodes","initAddPaypalAccount","$paypalErrorContainer","$paypalLoader","accountPaypalButton","paypalAddAccountHandler","paypalAccountFormFields","paypalAccountFormData","makedefault","csrfToken","renderAccountsUrl","tplData","googlePayHelper","$paypalButton","$braintreePaypalBillingAddressInput","$braintreePaypalShippingAddressInput","$braintreePaypalNonceInput","$braintreePaypalEmail","isSessionAccount","sessionAccount","newPPAccount","validate","updateAmountAndShippingData","$paypalAddress","newPayPalAddress","braintreeLocal","braintreeVenmo","venmoHelper","initAddVenmoAccount","$venmoErrorContainer","$venmoLoader","VENMO_BROWSER_NOT_SUPPORTED","accountVenmoButton","venmoAddAccountHandler","venmoAccountFormFields","venmoAccountFormData","$btVermoAccountsList","$braintreeVenmoNonce","$submitShippingBtn","$contactEmail","$hideVenmoButton","$billingForm","username","history","correlationId","attributeName","checkoutStage","oldValue","attributeOldValue","googlepay","$googlepayNonce","$btGooglePayLoader","$btFormErrorContainer","saving_paypal_account_error","$form","post","done","$googlepayCardDescription","$braintreeGooglepayBillingAddressInput","$braintreeGooglepayPaymentType","googlepayIns","googlepayUpdateAmount","returnFromCartUrl","paymentCardDescription","saveGpAccount","src","srcHelper","$srcButton","$srcNonce","$srcCardDescription","$srcBillingAddress","$srcAccountList","srcIns","cardDescrition","description","billingAddressString","setSessionAccountData","loadSrcButton","initSessionAccountDropdownState","updateSessionAccountDropdown","srcUpdateAmount","visaCheckout","srcPaymentErr","visaCheckoutInstance","baseInitOptions","subtotal","initOptions","createInitOptions","settings","shipping","collectShipping","V","userData","userEmailbillingAddress","position","offset","top","animate","scrollTop","focus","$srcSessionAccount","$accoutnListBlock"],"mappings":"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","file":"int_braintree.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","'use strict';\n\n/* global braintree $ */\n/* eslint no-console: 'off' */\n\nvar isDebugMode = true;\nif (console && isDebugMode) {\n    var consoleLog = console.log;\n    var consoleError = console.error;\n    console.log = function () {\n        consoleLog.apply(console, arguments);\n    };\n    console.error = function () {\n        consoleError.apply(console, arguments);\n    };\n} else {\n    console = { // eslint-disable-line no-global-assign\n        log: function () { },\n        error: function () { }\n    };\n}\n\nvar bu = {\n    pdpOnlickForAsignedPaypalPayment: function () {\n        var $bundleItem = $('.bundle-item');\n        function getOptions($productContainer) {\n            var options = $productContainer\n                .find('.product-option')\n                .map(function () {\n                    var $elOption = $(this).find('.options-select');\n                    var urlValue = $elOption.val();\n                    var selectedValueId = $elOption.find('option[value=\"' + urlValue + '\"]')\n                        .data('value-id');\n                    return {\n                        optionId: $(this).data('option-id'),\n                        selectedValueId: selectedValueId\n                    };\n                }).toArray();\n\n            return JSON.stringify(options);\n        }\n\n        var pid = $('.product-detail:not(\".bundle-item\")').data('pid');\n        var $btn = $('.braintree_pdp_button');\n        var $productContainer = $btn.closest('.product-detail');\n\n        var form = {\n            pid: pid,\n            quantity: $('.quantity-select').val()\n        };\n\n        if (!$bundleItem.length) {\n            form.options = getOptions($productContainer);\n        } else {\n            var items = $bundleItem.map(function () {\n                return {\n                    pid: $(this).find('.product-id').text(),\n                    quantity: parseInt($(this).find('label.quantity').data('quantity'), 10)\n                };\n            });\n            form.childProducts = JSON.stringify(items.toArray());\n        }\n        var response = $.ajax({\n            url: $('.add-to-cart-url').val(),\n            method: 'POST',\n            async: false,\n            data: form\n        }).responseJSON;\n        response.pid = pid;\n        return response;\n    },\n\n    getSelectedData: function (selectEl) {\n        if (!selectEl) {\n            return null;\n        }\n        var options = selectEl.getElementsByTagName('option');\n        var option = null;\n        for (var i = 0; i < options.length; i++) {\n            option = options[i];\n            if (option.selected) {\n                break;\n            }\n        }\n        return option.attributes;\n    },\n\n    postData: function (url, data) {\n        var formData = new FormData();\n\n        for (var key in data) {\n            formData.append(key, data[key]);\n        }\n        $.ajax({\n            url: url,\n            data: formData,\n            processData: false,\n            contentType: false,\n            type: 'POST',\n            success: function (res) {\n                window.location.href = res.redirectUrl;\n            },\n            error: function () {\n                location.reload();\n            }\n        });\n    },\n\n    messages: {},\n\n    errorInstances: [],\n    createErrorInstance: function (containerElement, callback) {\n        if (!containerElement) {\n            console.error('Braintree: No container for showing erros');\n        }\n        function Constructor(cb) {\n            bu.errorInstances.push(this);\n            this.containerEl = containerElement;\n            this.cb = typeof cb === 'function' ? cb : function () { };\n        }\n        Constructor.prototype.show = function (error) {\n            var text = '';\n            if (typeof error === 'string') {\n                text = error;\n            }\n            if (typeof error === 'object') {\n                var msg = bu.messages[error.code];\n                text = msg || error.message;\n                this.cb(this, error);\n                if (error.code === 'PAYPAL_POPUP_CLOSED') {\n                    return;\n                }\n            }\n            this.containerEl.style.display = '';\n            this.containerEl.innerHTML = text;\n        };\n        Constructor.prototype.hide = function () {\n            this.containerEl.innerHTML = '';\n        };\n        return new Constructor(callback);\n    },\n    clientToken: null\n};\n\nbu.console = console;\n\nmodule.exports = bu;\n\n","\nmodule.exports = function (containerElement) {\n    if (!containerElement) {\n        // eslint-disable-next-line no-console\n        console.error('Braintree: No container for showing loaders');\n    }\n    function Constructor() {\n        this.containerEl = containerElement;\n    }\n    Constructor.prototype.show = function () {\n        this.containerEl.style.display = 'block';\n    };\n    Constructor.prototype.hide = function () {\n        this.containerEl.style.display = 'none';\n    };\n    return new Constructor();\n};\n","'use strict';\nvar $continueButton = document.querySelector('button.submit-payment');\n\nfunction initWathcherCartUpdate() {\n    var $grantTotal = document.querySelector('.grand-total');\n    if ($grantTotal) {\n        var currentGrantTotalValue = $grantTotal.textContent;\n        $('body').on('cart:update', function () {\n            var newGrantTotalValue = $grantTotal.textContent;\n            if (newGrantTotalValue !== '' && newGrantTotalValue !== currentGrantTotalValue) {\n                currentGrantTotalValue = newGrantTotalValue;\n                var updateCartTotals = document.createEvent('Event');\n                updateCartTotals.initEvent('updateCartTotals', true, true);\n                document.querySelector('body').addEventListener('updateCartTotals', function () {\n                    'braintree:updateCartTotals';\n                }, false);\n                document.querySelector('body').dispatchEvent(updateCartTotals);\n            }\n        });\n    }\n}\n\nfunction continueButtonToggle(flag) {\n    var stage = window.location.hash.substring(1);\n    if (stage === 'placeOrder' || stage === 'shipping' || stage === null || stage === '') {\n        return;\n    }\n    if (flag) {\n        $continueButton.style.display = 'none';\n    } else {\n        $continueButton.style.display = '';\n    }\n}\n\n\nfunction paymentMethodChangeHandle(currentTab) {\n    document.querySelectorAll('.payment-options[role=tablist] a[data-toggle=\"tab\"]').forEach(function (el) {\n        var $tabContent = document.querySelector(el.getAttribute('href'));\n\n        if (el === currentTab) {\n            $tabContent.querySelectorAll('input, textarea, select').forEach(function (tab) {\n                tab.removeAttribute('disabled', 'disabled');\n            });\n            $tabContent.querySelectorAll('select.no-disable').forEach(function (tab) {\n                tab.setAttribute('disabled', 'disabled');\n            });\n            continueButtonToggle(JSON.parse($tabContent.getAttribute('data-paypal-is-hide-continue-button')));\n        } else {\n            $tabContent.querySelectorAll('input, textarea, select').forEach(function (tab) {\n                tab.setAttribute('disabled', 'disabled');\n            });\n        }\n    });\n}\n\nfunction getPaymentMethodToLowerCase(paymentMethodName) {\n    var paymentMethod = paymentMethodName.split('_');\n    if (paymentMethod.length === 1) {\n        return paymentMethodName;\n    }\n    paymentMethod.forEach(function (element, index) {\n        paymentMethod[index] = element.charAt(0) + element.slice(1).toLocaleLowerCase();\n    });\n    return paymentMethod[1] ?\n        paymentMethod[0] + ' ' + paymentMethod[1] :\n        paymentMethod[0];\n}\n\nfunction updateCheckoutView(e, data) {\n    var $paymentSummary = document.querySelector('.summary-details .braintree-payment-details');\n    var htmlToAppend = '';\n    var order = data.order;\n\n    if (order.billing.payment && order.billing.payment.selectedPaymentInstruments\n        && order.billing.payment.selectedPaymentInstruments.length > 0) {\n        htmlToAppend += '<div>' + getPaymentMethodToLowerCase(order.billing.payment.selectedPaymentInstruments[0].paymentMethod) + '</div>';\n        if (order.billing.payment.selectedPaymentInstruments[0].creditCardNumber) {\n            htmlToAppend += '<div>' + order.billing.payment.selectedPaymentInstruments[0].creditCardNumber + '</div>';\n        }\n        if (order.billing.payment.selectedPaymentInstruments[0].paymentMethod === 'GooglePay') {\n            let gpCardDescription = document.querySelector('#braintreeGooglePayCardDescription');\n            if (gpCardDescription && gpCardDescription.value) {\n                let gpCardDescriptionData = gpCardDescription.value.split(' ');\n                htmlToAppend += '<div>' + gpCardDescriptionData[0] + '....' + gpCardDescriptionData[1] + '</div>';\n            }\n        }\n        if (order.billing.payment.selectedPaymentInstruments[0].type) {\n            htmlToAppend += '<div>' + order.billing.payment.selectedPaymentInstruments[0].type + '</div>';\n        }\n        htmlToAppend += '<div>' + order.priceTotal.charAt(0) + order.billing.payment.selectedPaymentInstruments[0].amount + '</div>';\n    }\n\n    if ($paymentSummary) {\n        $paymentSummary.innerHTML = htmlToAppend;\n    }\n}\n\nfunction isValidInputField(field) {\n    if (!field.checkValidity()) {\n        if (!field.classList.contains('is-invalid')) {\n            field.classList.add('is-invalid');\n        }\n        return false;\n    }\n    if (field.checkValidity() && field.classList.contains('is-invalid')) {\n        field.classList.remove('is-invalid');\n    }\n    return true;\n}\n/*\n    Adding *active* line to the tab-content class in a case if it isn't already active\n    Use case: customer checkout from cart (page) and\n    (under the place Order page) hit the 'edit' button\n**/\nfunction updatePaymentMethodTab() {\n    let paymentMethodName = document.querySelectorAll('[data-braintree-payment-method]')[0].dataset.braintreePaymentMethod;\n    let content = document.querySelector(`.js_braintree_${paymentMethodName.toLowerCase()}Content`).classList.contains('active');\n    if (!content) {\n        document.querySelectorAll(`[data-method-id=${paymentMethodName}]`)[0].children[0].click();\n    }\n}\n\n/**\n * Gets Billing Address Form Values\n *\n * @returns {Object} with Billing Address\n */\nfunction getBillingAddressFormValues() {\n    return $('#dwfrm_billing').serialize().split('&')\n        .map(function (el) {\n            return el.split('=');\n        })\n        .reduce(function (accumulator, item) {\n            var elem = item[0].lastIndexOf('_');\n            if (elem < 0) {\n                accumulator[item[0]] = item[1];\n            } else {\n                elem = item[0].substring(elem + 1);\n                accumulator[elem] = item[1];\n            }\n            return accumulator;\n        }, {});\n}\n/**\n * Gets Nonce depending on payment method name\n *\n * @param {string} paymentMethodName - payment method name\n * @returns {boolean} nonce exist\n */\n\nfunction isNonceExist(paymentMethodName) {\n    var $nonce = document.querySelector(`#braintree${paymentMethodName}Nonce`);\n    if (!$nonce) return false;\n    var nonceValue = $nonce.value;\n    var $tab = document.querySelector(`.${paymentMethodName.toLowerCase()}-tab`);\n    var isActiveTab;\n    if ($tab) {\n        isActiveTab = $tab.classList.contains('active');\n    }\n    return !isActiveTab && nonceValue;\n}\n\nvar loaderInstance = require('./loaderHelper');\nvar accountsLoader;\nfunction removeBtPayment(e) {\n    let target = e.target;\n    var $loaderContainter = document.querySelector('#' + target.getAttribute('data-loader'));\n    accountsLoader = loaderInstance($loaderContainter);\n    accountsLoader.show();\n\n    $.get(target.getAttribute('data-url') + '?UUID=' + target.getAttribute('data-id'))\n        .then((data => {\n            $('#uuid-' + data.UUID).remove();\n            if (data.newDefaultPaypalAccount) {\n                $('#uuid-' + data.newDefaultPaypalAccount + ' .card-info-group p:first').append('<span><b>(default)</b></span>');\n            }\n            if (data.newDefaultCreditCard) {\n                document.querySelector('#uuid-' + data.newDefaultCreditCard + ' span').style.fontWeight = 'bold';\n                document.querySelector('#uuid-' + data.newDefaultCreditCard + ' button.braintree-make-default-card').style.display = 'none';\n            }\n            accountsLoader.hide();\n        }))\n        .fail(() => {\n            location.reload();\n            accountsLoader.hide();\n        });\n}\n\n/**\n * Create formData from fields data\n *\n * @param {Object} paymentFields - fields data values\n * @param {Object} fieldsData - fields data values\n * @returns {Object} cart billing form data\n */\nfunction createPaymentFormData(paymentFields, fieldsData) {\n    var paymentFieldsParsed = JSON.parse(paymentFields);\n\n    return Object.entries(paymentFieldsParsed).reduce(function (formData, entry) {\n        const [key, field] = entry;\n        if (typeof field === 'object') {\n            formData.append(field.name, fieldsData && fieldsData[key] !== null ? fieldsData[key] : field.value);\n        }\n        return formData;\n    }, new FormData());\n}\n\nfunction initCardEvents() {\n    if (document.querySelector('.braintreeAddNewCard')) {\n        document.querySelector('.braintreeAddNewCard').addEventListener('click', function () {\n            document.querySelector('.braintreeAddNewCard').style.display = 'none';\n            document.querySelector('.braintreeAddNewCardBlock').style.display = 'block';\n        });\n    }\n    document.querySelector('.creditCard-accounts').onclick = function (e) {\n        if (e.target.classList.contains('remove-bt-payment')) {\n            removeBtPayment(e);\n        } else if (e.target.classList.contains('braintree-make-default-card')) {\n            var target = e.target;\n            var url = target.getAttribute('data-make-default-url');\n            var id = target.getAttribute('data-id');\n            var $loaderContainter = document.querySelector('#' + target.getAttribute('data-loader'));\n            var loader = loaderInstance($loaderContainter);\n            loader.show();\n\n            $.get(url + '?UUID=' + id)\n                .then((data) => {\n                    loader.hide();\n                    if (data.newDefaultCreditCard) {\n                        document.querySelector('#uuid-' + data.newDefaultCreditCard + ' span').style.fontWeight = 'bold';\n                        document.querySelector('.braintree-make-default-card.uuid-' + data.newDefaultCreditCard).style.display = 'none';\n                    }\n                    if (data.cardToRemoveDefaultProperty) {\n                        document.querySelector('#uuid-' + data.cardToRemoveDefaultProperty + ' span').style.fontWeight = 'normal';\n                        document.querySelector('.braintree-make-default-card.uuid-' + data.cardToRemoveDefaultProperty).style.display = 'inline';\n                    }\n                })\n                .fail(() => {\n                    loader.hide();\n                });\n        }\n    };\n}\nmodule.exports = {\n    initWathcherCartUpdate,\n    paymentMethodChangeHandle,\n    continueButtonToggle,\n    updateCheckoutView,\n    isValidInputField,\n    updatePaymentMethodTab,\n    getBillingAddressFormValues,\n    removeBtPayment,\n    createPaymentFormData,\n    initCardEvents,\n    isNonceExist\n};\n","'use strict';\nvar braintreeUtils = require('../braintreeUtils');\nvar $addPaypalAccountBtn = document.querySelector('.add-paypal-account');\nvar $paypalAccountWrapper = document.querySelector('.js_braintree_accountPaypalButton_wrapper');\n\nvar formValidationConrol = function (validateActions) {\n    var isFormValid = true;\n    if (isFormValid) {\n        validateActions.enable();\n    } else {\n        validateActions.disable();\n    }\n};\n\nfunction getSessionAccountOption() {\n    return Array.apply(null, document.querySelector('#braintreePaypalAccountsList').options).find(function (el) {\n        return el.id === 'braintreePaypalAccount' && JSON.parse(el.getAttribute('data-session-account'));\n    });\n}\n\nfunction getOptionByEmail() {\n    var sessionEmail = document.getElementById('braintreePaypalAccount').value || null;\n    return Array.apply(null, document.querySelector('#braintreePaypalAccountsList').options).find(function (el) {\n        return el.getAttribute('data-id') && sessionEmail && sessionEmail === el.text;\n    });\n}\n\nfunction getOptionByDataDefault() {\n    return Array.apply(null, document.querySelector('#braintreePaypalAccountsList').options).find(function (el) {\n        return el.getAttribute('data-default') ? JSON.parse(el.getAttribute('data-default')) : false;\n    });\n}\n\nfunction setSessionAccountOptionDefault() {\n    var savedDefaultOption = getOptionByDataDefault();\n    if (!savedDefaultOption) return;\n\n    savedDefaultOption.selected = '';\n    getSessionAccountOption().selected = 'selected';\n}\n\nfunction initAccountListAndSaveFunctionality() {\n    var $accountsList = document.querySelector('#braintreePaypalAccountsList');\n    var isUserHasSavedAccount = $accountsList.getAttribute('data-customer-has-saved-pp-account');\n    var $savePaypalAccountCountainer = document.querySelector('#braintreeSavePaypalAccountContainer');\n    var $savePaypalAccountCheckbox = document.querySelector('#braintreeSavePaypalAccount');\n    var $paypalAccounMakeDefaultContainer = document.querySelector('#braintreePaypalAccountMakeDefaultContainer');\n    var $paypalAccountMakeDefaultCheckbox = document.querySelector('#braintreePaypalAccountMakeDefault');\n    var $alertInfo = document.getElementById('paypal-content').querySelectorAll('.alert-info')[0];\n\n    function accountsListChange() { // eslint-disable-line require-jsdoc\n        var isSameSessionAccount = getOptionByEmail();\n\n        if (($accountsList.value === 'newaccount')) {\n            $alertInfo.style.display = 'block';\n            if ($savePaypalAccountCountainer) {\n                $savePaypalAccountCountainer.style.display = '';\n                $savePaypalAccountCheckbox.checked = true;\n                $savePaypalAccountCheckbox.disabled = false;\n            }\n            if ($paypalAccounMakeDefaultContainer) {\n                $paypalAccounMakeDefaultContainer.style.display = isUserHasSavedAccount === 'true' ? 'block' : 'none';\n\n                if ($savePaypalAccountCheckbox.checked) {\n                    $paypalAccountMakeDefaultCheckbox.disabled = false;\n                }\n            }\n        } else if ($accountsList.selectedOptions[0].id === 'braintreePaypalAccount') {\n            // Case when Session Email already saved under account\n            if (isSameSessionAccount) {\n                $paypalAccounMakeDefaultContainer.style.display = 'none';\n                $savePaypalAccountCountainer.style.display = 'none';\n                $savePaypalAccountCheckbox.checked = false;\n                $paypalAccountMakeDefaultCheckbox.checked = false;\n            } else if ($savePaypalAccountCountainer) {\n                $savePaypalAccountCountainer.style.display = 'block';\n                $savePaypalAccountCheckbox.checked = true;\n                $savePaypalAccountCheckbox.disabled = false;\n            }\n        } else {\n            $alertInfo.style.display = 'none';\n            var selectedAccount = braintreeUtils.getSelectedData($accountsList);\n            if (selectedAccount && $paypalAccounMakeDefaultContainer) {\n                if (selectedAccount['data-default'].value === 'true') {\n                    $paypalAccounMakeDefaultContainer.style.display = 'none';\n                } else {\n                    $paypalAccounMakeDefaultContainer.style.display = 'block';\n                    $paypalAccountMakeDefaultCheckbox.disabled = false;\n                }\n            }\n            if ($savePaypalAccountCountainer) {\n                $savePaypalAccountCheckbox.checked = false;\n                $savePaypalAccountCountainer.style.display = 'none';\n            }\n        }\n    }\n\n    if ($savePaypalAccountCheckbox) {\n        $savePaypalAccountCheckbox.addEventListener('change', function () {\n            if ($savePaypalAccountCheckbox.checked) {\n                $paypalAccountMakeDefaultCheckbox.disabled = false;\n                if (isUserHasSavedAccount === 'false') {\n                    $paypalAccountMakeDefaultCheckbox.checked = true;\n                }\n            } else {\n                $paypalAccountMakeDefaultCheckbox.disabled = true;\n                $paypalAccountMakeDefaultCheckbox.checked = false;\n            }\n        });\n    }\n    if ($accountsList) {\n        $accountsList.addEventListener('change', accountsListChange);\n        accountsListChange();\n    }\n}\n\nfunction createShippingAddressData(inpShippingAddress, details) {\n    var shippingAddress = inpShippingAddress;\n    if (!shippingAddress.recipientName) {\n        shippingAddress.firstName = details.firstName;\n        shippingAddress.lastName = details.lastName;\n        shippingAddress.recipientName = details.firstName + ' ' + details.lastName;\n    }\n    shippingAddress.email = details.email;\n    shippingAddress.phone = details.phone;\n    shippingAddress.countryCodeAlpha2 = shippingAddress.countryCode;\n    shippingAddress.streetAddress = shippingAddress.line1;\n    shippingAddress.extendedAddress = shippingAddress.line2;\n    shippingAddress.locality = shippingAddress.city;\n    shippingAddress.region = shippingAddress.state;\n    shippingAddress.postalCode = shippingAddress.postalCode;\n    return JSON.stringify(shippingAddress);\n}\n\nfunction createBillingAddressData(inpBillingAddress, details) {\n    var billingAddress = inpBillingAddress;\n    billingAddress.firstName = details.firstName;\n    billingAddress.lastName = details.lastName;\n    billingAddress.email = details.email;\n    billingAddress.phone = details.phone;\n    billingAddress.countryCodeAlpha2 = billingAddress.countryCode;\n    billingAddress.streetAddress = billingAddress.line1;\n    billingAddress.extendedAddress = billingAddress.line2;\n    billingAddress.locality = billingAddress.city;\n    billingAddress.region = billingAddress.state;\n    return JSON.stringify(billingAddress);\n}\n\nfunction appendToUrl(url, param) {\n    var newUrl = url;\n    newUrl += (newUrl.indexOf('?') !== -1 ? '&' : '?') + Object.keys(param).map(function (key) {\n        return key + '=' + encodeURIComponent(param[key]);\n    }).join('&');\n\n    return newUrl;\n}\n\nfunction showPayPalAccount(braintreePaypalEmail, braintreePaypalNonce) {\n    var braintreePaypalAccount = document.getElementById('braintreePaypalAccount');\n    var paypalAccount = document.querySelector('.form-group.braintree_used_paypal_account');\n    var $paypalContent = document.querySelector('.js_braintree_paypalContent');\n    var $braintreePaypalAccountsList = document.getElementById('braintreePaypalAccountsList');\n    var customerAuthenticated = JSON.parse($braintreePaypalAccountsList.dataset.customerAuthenticated);\n\n    if (customerAuthenticated || (braintreePaypalEmail && braintreePaypalAccount.text !== 'PayPal')) {\n        if (braintreePaypalNonce && $braintreePaypalAccountsList) {\n            return true;\n        }\n\n        document.querySelectorAll('.js_braintree_paypalContent .custom-checkbox').forEach((el) => { el.style.display = 'none'; });\n    }\n\n    braintreePaypalAccount.text = braintreePaypalEmail;\n    if (!paypalAccount.classList.contains('used-paypal-account')) {\n        paypalAccount.classList.remove('used-paypal-account-hide');\n        paypalAccount.classList.add('used-paypal-account');\n    }\n\n    document.querySelector('.js_braintree_paypal_billing_button').style.display = 'none';\n    $paypalContent.setAttribute('data-paypal-is-hide-continue-button', false);\n}\n\nfunction showCartErrorMsg(message) {\n    $('.checkout-btn').addClass('disabled');\n    $('.cart-error').append(\n        `<div class=\"alert alert-danger alert-dismissible valid-cart-error fade show cartError\" role=\"alert\">\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            ${message}\n        </div>`\n    );\n    window.scrollTo(0, 0);\n}\n\nfunction showCheckoutErrorMsg(message) {\n    document.querySelector('.error-message-text').textContent = '';\n    document.querySelector('.error-message').style.display = 'block';\n    document.querySelector('.error-message-text').append(message);\n    window.scrollTo(0, 0);\n}\n\nfunction showPDPButton($braintreePDPButton) {\n    $braintreePDPButton.style.display = '';\n}\n\nfunction hidePDPButton($braintreePDPButton) {\n    $braintreePDPButton.style.display = 'none';\n}\n\n/*\n    Check if paypal method was used and change appearance of paypal tab\n**/\nfunction updatePayPalAppearance() {\n    var sessionOption = getSessionAccountOption();\n    if (sessionOption) {\n        var $paypalContent = document.querySelector('.js_braintree_paypalContent');\n        document.querySelector('#braintreePaypalNonce').value = '';\n        document.querySelector('#braintreePaypalAccount').selected = false;\n        sessionOption.classList.add('used-paypal-account-hide');\n        sessionOption.classList.remove('used-paypal-account');\n        sessionOption.value = '';\n        sessionOption.text = '';\n        sessionOption.setAttribute('data-session-account', false);\n\n        var defaultOption = getOptionByDataDefault();\n        if (defaultOption) {\n            defaultOption.selected = true;\n            document.querySelector('#braintreePaypalAccountMakeDefaultContainer').style.display = 'none';\n            document.querySelector('#braintreeSavePaypalAccountContainer').style.display = 'none';\n            document.querySelector('.js_braintree_paypal_billing_button').style.display = 'none';\n            $paypalContent.setAttribute('data-paypal-is-hide-continue-button', false);\n        } else {\n            $paypalContent.setAttribute('data-paypal-is-hide-continue-button', true);\n            document.querySelector('.js_braintree_paypal_billing_button').style.display = 'block';\n            var paypalAccount = document.querySelector('.form-group.braintree_used_paypal_account');\n            paypalAccount.classList.remove('used-paypal-account');\n            paypalAccount.classList.add('used-paypal-account-hide');\n        }\n\n        [].forEach.call(document.querySelector('#braintreePaypalAccountsList'), function (el) {\n            if (el.style.display === 'none') el.style.display = 'block';\n        });\n    }\n}\n\nfunction showPaypalAccountBtn() {\n    $addPaypalAccountBtn.style.display = 'none';\n    $paypalAccountWrapper.style.display = 'block';\n}\nfunction hidePaypalAccountBtn() {\n    $addPaypalAccountBtn.style.display = 'block';\n    $paypalAccountWrapper.style.display = 'none';\n}\n\nmodule.exports = {\n    formValidationConrol,\n    initAccountListAndSaveFunctionality,\n    createShippingAddressData,\n    createBillingAddressData,\n    appendToUrl,\n    showPayPalAccount,\n    showCartErrorMsg,\n    showCheckoutErrorMsg,\n    showPDPButton,\n    hidePDPButton,\n    getOptionByEmail,\n    getSessionAccountOption,\n    getOptionByDataDefault,\n    updatePayPalAppearance,\n    setSessionAccountOptionDefault,\n    showPaypalAccountBtn,\n    hidePaypalAccountBtn\n};\n","/* eslint-disable block-scoped-var */\n'use strict';\nvar braintreeUtils = require('./braintreeUtils');\nvar loaderInstance = require('./loaderHelper');\nvar creditcardHelper = require('./creditcard/creditcardHelper');\n\n/* global braintreeUtils braintree $ */\n\nvar bu = braintreeUtils;\nvar er = null;\nvar loader;\nvar params;\n\nfunction createHostedFields() {\n    if (params.isFraudToolsEnabled) {\n        loader.show();\n        braintree.dataCollector.create({\n            authorization: bu.clientToken,\n            kount: true,\n            paypal: false\n        }, function (error, data) {\n            loader.hide();\n            if (error) {\n                return;\n            }\n            document.querySelector('#braintreeDeviceData').value = data.deviceData;\n        });\n    }\n    loader.show();\n\n    braintree.hostedFields.create({\n        authorization: bu.clientToken,\n        styles: params.hostedFieldsStyles,\n        fields: params.hostedFieldsConfig\n    }, function (error, hostedFieldsInstance) {\n        loader.hide();\n        if (error) {\n            er.show(error);\n            return;\n        }\n        params.hostedFieldsInstance = hostedFieldsInstance;\n        hostedFieldsInstance.on('validityChange', function () {\n            if (params.continueButton && JSON.parse(params.continueButton.getAttribute('data-is-allow-submit-form'))) {\n                params.continueButton.setAttribute('data-is-allow-submit-form', false);\n            }\n        });\n    });\n}\n\nfunction isFormValid() {\n    var $cardOwnerEl = document.querySelector('#braintreeCardOwner');\n    if ($cardOwnerEl.value.length === 0) {\n        $cardOwnerEl.parentNode.classList.add('braintree-hosted-fields-invalid');\n        er.show(params.messages.validation);\n        return false;\n    }\n    $cardOwnerEl.parentNode.classList.remove('braintree-hosted-fields-invalid');\n    er.hide();\n\n    return true;\n}\n\nfunction check3dSecureAndSubmit(response, startTokenizeCb) {\n    if (!response.nonce || response.nonce === 'null') {\n        document.querySelector('#braintreePaymentMethodNonce').value = 'null';\n        startTokenizeCb({\n            error: true,\n            errorCode: 'nonce_is_null'\n        });\n        return;\n    }\n    if (!params.is3dSecureEnabled) {\n        document.querySelector('#braintreePaymentMethodNonce').value = response.nonce;\n        startTokenizeCb({\n            error: false,\n            errorCode: 'ok'\n        });\n        return;\n    }\n\n    loader.show();\n\n    var billingData = require('./helper').getBillingAddressFormValues();\n\n    braintree.threeDSecure.create({\n        authorization: bu.clientToken,\n        version: 2\n    }, function (error, threeDSecure) {\n        loader.hide();\n        if (error) {\n            er.show(error);\n            startTokenizeCb({\n                error: true,\n                errorCode: 'bt_3dsecure_create_error',\n                btError: error\n            });\n            return;\n        }\n        bu.threeDSecure = threeDSecure;\n        loader.show();\n        threeDSecure.verifyCard({\n            amount: params.data.amount,\n            nonce: response.nonce,\n            bin: response.details ? response.details.bin : '',\n            email: document.querySelector('#email').value,\n            billingAddress: {\n                givenName: billingData.firstName,\n                surname: billingData.lastName,\n                phoneNumber: billingData.phone,\n                streetAddress: billingData.address1,\n                extendedAddress: billingData.address2,\n                locality: billingData.city,\n                region: billingData.stateCode,\n                postalCode: billingData.postalCode,\n                countryCodeAlpha2: billingData.country\n            },\n            additionalInformation: params.data.shippingAdditionalInfo,\n            onLookupComplete: function (data, next) {\n                next();\n            }\n        }, function (err, data) {\n            loader.hide();\n            if (err) {\n                er.show(err);\n                startTokenizeCb({\n                    error: true,\n                    errorCode: 'bt_3dsecure_verify_error',\n                    btError: err\n                });\n                return;\n            }\n            if (data.liabilityShifted || params.isSkip3dSecureLiabilityResult) {\n                document.querySelector('#braintreeIs3dSecureRequired').value = 'true';\n                document.querySelector('#braintreePaymentMethodNonce').value = data.nonce;\n                startTokenizeCb({\n                    error: false,\n                    result: 'ok'\n                });\n                return;\n            }\n            er.show(params.messages.secure3DFailed);\n            startTokenizeCb({\n                error: true,\n                result: 'secure3DFailed'\n            });\n            return;\n        });\n    });\n}\n\nfunction startTokenize(cb, response) {\n    if (response && response.nonce) {\n        check3dSecureAndSubmit(response, cb);\n        return;\n    }\n    if (!isFormValid()) {\n        cb({\n            error: true,\n            errorCode: 'fields_not_valid'\n        });\n        return;\n    }\n    loader.show();\n    params.hostedFieldsInstance.tokenize(function (error, data) {\n        loader.hide();\n        if (error) {\n            er.show(error);\n            cb({\n                error: true,\n                errorCode: 'bt_tokenize_error',\n                btError: error\n            });\n            return;\n        }\n        if (data.type === 'CreditCard') {\n            document.querySelector('#braintreeCardType').value = creditcardHelper.convertCardTypeToDwFormat(data.details.cardType);\n            document.querySelector('#braintreeCardMaskNumber').value = '************' + data.details.lastFour;\n        }\n        check3dSecureAndSubmit(data, cb);\n    });\n}\n\nfunction init(initParams) {\n    params = initParams;\n    bu.clientToken = params.clientToken;\n}\n\nfunction initFields(initParams, $container) {\n    params = initParams;\n    params.$container = $container;\n\n    er = bu.createErrorInstance(document.querySelector('#braintreeCreditCardErrorContainer'), creditcardHelper.creditcardErrorContainer);\n    loader = loaderInstance(document.querySelector('#braintreeCreditCardLoader'));\n    bu.clientToken = params.clientToken;\n    $.extend(bu.messages, params.messages);\n\n    creditcardHelper.cardOwnerEvents();\n\n    function getHostedFieldsStyles() {\n        return {\n            input: {\n                'font-size': '12px',\n                color: '#b7802a'\n            },\n            ':focus': {\n                color: 'blue'\n            },\n            '.valid': {\n                color: 'green'\n            },\n            '.invalid': {\n                color: 'red'\n            }\n        };\n    }\n\n    function getHostedFieldsConfig() {\n        return {\n            number: {\n                selector: '#braintreeCardNumber'\n            },\n            cvv: {\n                selector: '#braintreeCvv'\n            },\n            expirationDate: {\n                selector: '#braintreeExpirationDate'\n            }\n        };\n    }\n\n    if (!params.hostedFieldsStyles) {\n        params.hostedFieldsStyles = getHostedFieldsStyles();\n    }\n\n    params.hostedFieldsConfig = getHostedFieldsConfig();\n\n    $.extend(params.hostedFieldsConfig, params.hostedFieldsAdvancedOptions);\n\n    createHostedFields();\n}\n\nmodule.exports = {\n    init,\n    initFields,\n    startTokenize,\n    isFormValid,\n    getHostedFieldInstance: function () {\n        return params ? params.hostedFieldsInstance : null;\n    },\n    updateData: function (data) {\n        params.data = data;\n    }\n};\n","/* eslint-disable no-inner-declarations */\n/* eslint-disable new-cap */\n'use strict';\n\n/* global braintreeUtils braintree paypal $ */\nvar braintreeUtils = require('./braintreeUtils');\nvar loaderInstance = require('./loaderHelper');\nvar paypalHelper = require('./paypal/paypalHelper');\n\nvar bu = braintreeUtils;\nvar console = bu.console;\n\nvar pid;\nvar uuid;\nvar removeFromCartUrl;\nvar loader;\nvar $price;\nvar sdkUrlConfiguration;\nvar isZeroAmount = false;\nvar $braintreePDPButton = document.querySelector('.braintree_pdp_button');\nvar $miniCartQuantity = document.querySelector('.minicart-quantity');\nvar $addToCartButton = document.querySelector('.add-to-cart') || document.querySelector('.add-to-cart-global');\nvar $paypalCartButton = document.querySelector('.js_braintree_paypal_cart_button');\nvar $paypalBillingButton = document.querySelector('.js_braintree_paypal_billing_button');\n\nfunction Constructor(initParams, $btn) {\n    var params = initParams;\n    this.params = initParams;\n    params.options = params.options || {};\n\n    this.$btn = $btn;\n    var $errorContainer = document.createElement('div');\n    $errorContainer.className = 'error';\n\n    if (params.$errorContainer) {\n        $errorContainer = params.$errorContainer;\n        delete params.$errorContainer;\n    }\n\n    var $loaderContainter = document.querySelector('.braintreePayPalLoader');\n    var $braintreePaypalRiskDataInput = document.querySelector('input[name=braintreePaypalRiskData]');\n\n    if (params.$loaderContainer) {\n        $loaderContainter = params.$loaderContainer;\n    }\n\n    $btn.parentNode.insertBefore($errorContainer, $btn.nextSibling);\n\n    this.er = bu.createErrorInstance($errorContainer);\n    loader = loaderInstance($loaderContainter);\n    this.loader = loader;\n    var that = this;\n\n    if (params.isFraudToolsEnabled) {\n        loader.show();\n        braintree.dataCollector.create({\n            authorization: bu.clientToken,\n            paypal: true,\n            kount: false\n        }, function (error, data) {\n            loader.hide();\n            if (error) {\n                console.log(error);\n                return;\n            }\n            if ($braintreePaypalRiskDataInput) {\n                $braintreePaypalRiskDataInput.value = data.deviceData;\n            }\n            params.riskData = data.deviceData;\n        });\n    }\n\n    if ($braintreePDPButton) {\n        $price = document.querySelector('.price .sales .value');\n        // Check minicart quantity and hide PDPbutton if it is not empty\n        if (($miniCartQuantity && parseInt($miniCartQuantity.textContent, 0) > 0)\n            || ($price && $price.getAttribute('content') === '0.00')) {  // Check if product price is zero\n            paypalHelper.hidePDPButton($braintreePDPButton);\n        }\n    }\n\n    loader.show();\n\n    braintree.client.create({\n        authorization: bu.clientToken\n    }).then(function (clientInstance) {\n        return braintree.paypalCheckout.create({\n            client: clientInstance\n        });\n    }).then(function (paypalCheckoutInstance) {\n        if ($braintreePDPButton) {\n            if ($addToCartButton.disabled) {\n                paypalHelper.hidePDPButton($braintreePDPButton);\n            }\n            $('body').on('cart:update', function () {\n                $miniCartQuantity = parseInt(document.querySelector('.minicart-quantity').textContent, 0);\n                if ($addToCartButton.disabled) {\n                    paypalHelper.hidePDPButton($braintreePDPButton);\n                }\n                if ($miniCartQuantity === 0 && !$addToCartButton.disabled) {\n                    paypalHelper.showPDPButton($braintreePDPButton);\n                }\n            });\n\n            $('body').on('product:afterAddToCart', function () {\n                paypalHelper.hidePDPButton($braintreePDPButton);\n            });\n\n            // Update addToCart button status\n            $('body').on('product:statusUpdate', function () {\n                $miniCartQuantity = parseInt(document.querySelector('.minicart-quantity').textContent, 0);\n                $price = document.querySelector('.price .sales .value');\n                isZeroAmount = false;\n                if ($braintreePDPButton && $price) {\n                    isZeroAmount = $price.getAttribute('content') === '0.00';\n                }\n\n                if ($miniCartQuantity === 0) {\n                    if ($addToCartButton.disabled || isZeroAmount) {\n                        paypalHelper.hidePDPButton($braintreePDPButton);\n                    }\n                    if (!$addToCartButton.disabled && !isZeroAmount) {\n                        paypalHelper.showPDPButton($braintreePDPButton);\n                    }\n                }\n            });\n        }\n\n        var payment = function () {\n            if ($braintreePDPButton && $braintreePDPButton.style.display === '') {\n                that.er.hide();\n                var res = braintreeUtils.pdpOnlickForAsignedPaypalPayment();\n                if (res.cart) {\n                    uuid = res.pliUUID;\n                    removeFromCartUrl = res.cart.actionUrls.removeProductLineItemUrl;\n                    pid = res.pid;\n                    that.params.options.amount = parseFloat(res.cart.totals.grandTotal.replace(/\\$|,/g, ''));\n                } else {\n                    throw new Error(res.message || 'Error occurs');\n                }\n            }\n            return paypalCheckoutInstance.createPayment(that.params.options);\n        };\n\n        var paypalButtonConfig = {\n            locale: params.options.locale,\n            onApprove: function (data) {\n                if (params.options.intent === 'order') {\n                    data.intent = 'order';\n                }\n                return paypalCheckoutInstance.tokenizePayment(data).then(function (payload) {\n                    params.onTokenizePayment(payload, that);\n                });\n            },\n            onCancel: function (a, b) {\n                if (typeof params.options.onCancel === 'function') {\n                    params.options.onCancel(a, b);\n                }\n                if ($braintreePDPButton && $braintreePDPButton.style.display === '') {\n                    var urlParams = {\n                        pid: pid,\n                        uuid: uuid\n                    };\n\n                    $.ajax({\n                        url: paypalHelper.appendToUrl(removeFromCartUrl, urlParams),\n                        type: 'get',\n                        dataType: 'json',\n                        success: function () {\n                            $.spinner().stop();\n                        },\n                        error: function () {\n                            $.spinner().stop();\n                        }\n                    });\n                }\n            },\n            onError: function (err) {\n                that.er.show(err.message.split(/\\r?\\n/g)[0]);\n\n                if ($braintreePDPButton && $braintreePDPButton.style.display === '' && pid) {\n                    var productID = pid;\n                    var urlParams = {\n                        pid: productID,\n                        uuid: uuid\n                    };\n\n                    $.ajax({\n                        url: paypalHelper.appendToUrl(removeFromCartUrl, urlParams),\n                        type: 'get',\n                        dataType: 'json',\n                        success: function () {\n                            $.spinner().stop();\n                        },\n                        error: function () {\n                            $.spinner().stop();\n                        }\n                    });\n                }\n            }\n        };\n\n        isZeroAmount = that.params.options.amount === 0;\n        if (isZeroAmount) {\n            var zeroAmountErrorMsg = 'Order total 0 is not allowed for PayPal';\n            paypalButtonConfig.onClick = function (_, actions) {\n                if ($paypalCartButton) paypalHelper.showCartErrorMsg(zeroAmountErrorMsg);\n                if ($paypalBillingButton) paypalHelper.showCheckoutErrorMsg(zeroAmountErrorMsg);\n                return actions.reject();\n            };\n        }\n\n        if (params.options && params.options.flow === 'checkout') {\n            paypalButtonConfig.createOrder = payment;\n            sdkUrlConfiguration = {\n                intent: params.options.intent,\n                currency: params.options.currency,\n                components: 'buttons,messages',\n                commit: false\n            };\n        } else {\n            paypalButtonConfig.createBillingAgreement = payment;\n            sdkUrlConfiguration = {\n                vault: true,\n                components: 'buttons,messages'\n            };\n        }\n\n        paypalButtonConfig = $.extend(false, paypalButtonConfig, that.params.paypalConfig);\n        loader.hide();\n\n        if (!window.isPayPalSDKLoaded) {\n            paypalCheckoutInstance.loadPayPalSDK(sdkUrlConfiguration).then(function () {\n                window.isPayPalSDKLoaded = true;\n                return paypal.Buttons(paypalButtonConfig).render(that.$btn);\n            });\n        } else {\n            return paypal.Buttons(paypalButtonConfig).render(that.$btn);\n        }\n    }).catch(function (err) {\n        console.error('Error!', err);\n        loader.hide();\n    });\n}\n\nConstructor.prototype.updateAmount = function (amount) {\n    this.params.options.amount = amount;\n};\n\nConstructor.prototype.updateShippingAddress = function (data) {\n    this.params.options.shippingAddressOverride = data;\n};\n\nmodule.exports = {\n    init: function (params, $btn) {\n        bu.clientToken = params.clientToken;\n        $.extend(bu.messages, params.messages);\n        return new Constructor(params, $btn);\n    }\n};\n","'use strict';\nvar helper = require('../helper');\n\nvar $googlepayContent = document.querySelector('.js_braintree_googlepayContent');\nvar $btGooglepayAccountsList = document.querySelector('#braintreeGooglepayAccountsList');\nvar $googlepayButton = document.querySelector('.js_braintree_googlepay_button');\n\nfunction showGooglepayAccount() {\n    var $sessionAccount = document.querySelector('#sessionGPAccount');\n    $sessionAccount.classList.remove('used-googlepay-account-hide');\n    $sessionAccount.classList.add('used-googlepay-account');\n\n    var $gpAccount = document.querySelector('.form-group.braintree_used_googlepay_account');\n    $gpAccount.classList.remove('used-googlepay-account-hide');\n    $gpAccount.classList.add('used-googlepay-account');\n\n    $googlepayButton.style.display = 'none';\n    $googlepayContent.setAttribute('data-paypal-is-hide-continue-button', false);\n    helper.continueButtonToggle(false);\n}\n\nfunction hideShowButtons() {\n    if ($btGooglepayAccountsList.value === 'newaccount') {\n        $googlepayButton.style.display = 'block';\n        helper.continueButtonToggle(true);\n        $googlepayContent.setAttribute('data-paypal-is-hide-continue-button', true);\n    } else {\n        $googlepayButton.style.display = 'none';\n        helper.continueButtonToggle(false);\n        $googlepayContent.setAttribute('data-paypal-is-hide-continue-button', false);\n    }\n}\n\nfunction createGooglepayBillingAddressData(data) {\n    var billingData = data.paymentMethodData.info.billingAddress;\n    var billingAddress = {};\n    billingAddress.recipientName = billingData.name;\n    billingAddress.phone = billingData.phoneNumber;\n    billingAddress.countryCodeAlpha2 = billingData.countryCode;\n    billingAddress.streetAddress = billingData.address1;\n    billingAddress.extendedAddress = billingData.address2;\n    billingAddress.locality = billingData.locality;\n    billingAddress.region = billingData.administrativeArea;\n    billingAddress.postalCode = billingData.postalCode;\n    billingAddress.email = data.email;\n    return JSON.stringify(billingAddress);\n}\n\nfunction createGooglepayShippingAddressData(shippingData) {\n    var shippingAddress = {};\n    shippingAddress.recipientName = shippingData.name;\n    shippingAddress.phone = shippingData.phoneNumber;\n    shippingAddress.countryCodeAlpha2 = shippingData.countryCode;\n    shippingAddress.streetAddress = shippingData.address1;\n    shippingAddress.extendedAddress = shippingData.address2;\n    shippingAddress.locality = shippingData.locality;\n    shippingAddress.region = shippingData.administrativeArea;\n    shippingAddress.postalCode = shippingData.postalCode;\n    return JSON.stringify(shippingAddress);\n}\n\n/*\n    Remove method was used and change appearance of paypal tab\n**/\nfunction removeSessionAccount() {\n    var $gpAccount = document.querySelector('.form-group.braintree_used_googlepay_account');\n    $gpAccount.classList.remove('used-googlepay-account');\n    $gpAccount.classList.add('used-googlepay-account-hide');\n\n    var $sessionAccount = document.querySelector('#sessionGPAccount');\n    $sessionAccount.classList.add('used-googlepay-account-hide');\n    $sessionAccount.classList.remove('used-googlepay-account');\n    $sessionAccount.value = '';\n    $sessionAccount.text = '';\n    $sessionAccount.setAttribute('data-session-account', false);\n\n    document.querySelector('#braintreeGooglePayNonce').value = '';\n    document.querySelector('#braintreeGooglePayBillingAddress').value = '';\n    document.querySelector('#braintreeGooglepayPaymentType').value = '';\n\n    document.querySelector('#newGPAccount').selected = true;\n    hideShowButtons();\n}\n\nmodule.exports = {\n    showGooglepayAccount,\n    hideShowButtons,\n    createGooglepayBillingAddressData,\n    createGooglepayShippingAddressData,\n    removeSessionAccount\n};\n","'use strict';\nvar braintreeUtils = require('../braintreeUtils');\nvar bu = braintreeUtils;\n\nvar $creditCardList = document.querySelector('#braintreeCreditCardList');\nvar $creditCardMakeDefault = document.querySelector('#braintreeDefaultCard');\nvar $saveCreditCard = document.querySelector('#braintreeSaveCreditCard');\nvar $cardOwner = document.querySelector('#braintreeCardOwner');\n\nfunction creditcardErrorContainer(errorIns, errorData) {\n    var error = errorData;\n    if (error.details && error.details.invalidFieldKeys) {\n        for (var i = 0; i < error.details.invalidFieldKeys.length; i++) {\n            var key = error.details.invalidFieldKeys[i];\n            if (key === 'number') {\n                document.querySelector('#braintreeCardNumber').classList.add('braintree-hosted-fields-invalid');\n            }\n            if (key === 'cvv') {\n                document.querySelector('#braintreeCvv').classList.add('braintree-hosted-fields-invalid');\n            }\n            if (key === 'expirationDate') {\n                document.querySelector('#braintreeExpirationDate').classList.add('braintree-hosted-fields-invalid');\n            }\n        }\n    }\n    if (error.code === 'HOSTED_FIELDS_FIELDS_EMPTY') {\n        document.querySelector('#braintreeCardNumber, #braintreeCvv, #braintreeExpirationDate').classList.add('braintree-hosted-fields-invalid');\n    }\n}\n\nfunction convertCardTypeToDwFormat(braintreeType) {\n    switch (braintreeType) {\n        case 'American Express':\n            return 'Amex';\n        case 'MasterCard':\n            return 'Master';\n        default:\n            return braintreeType;\n    }\n}\n\nfunction cardOwnerUpdateClasses() {\n    var value = $cardOwner.value;\n    if (value.length <= parseInt($cardOwner.getAttribute('maxlength'), 10) && value.length !== 0) {\n        $cardOwner.parentNode.classList.add('braintree-hosted-fields-valid');\n    } else {\n        $cardOwner.parentNode.classList.remove('braintree-hosted-fields-valid');\n        $cardOwner.parentNode.classList.remove('braintree-hosted-fields-invalid');\n    }\n}\n\nfunction cardListChange() {\n    var $cardOwnerPh = document.querySelector('#braintreeCardOwnerPh');\n    var $cardNumbeber = document.querySelector('#braintreeCardNumber');\n    var $cardNumbeberPh = document.querySelector('#braintreeCardNumberPh');\n    var $cardCvv = document.querySelector('#braintreeCvv');\n    var $cardCvvPh = document.querySelector('#braintreeCvvPh');\n    var $cardExpiration = document.querySelector('#braintreeExpirationDate');\n    var $cardExpirationPh = document.querySelector('#braintreeExpirationPh');\n    var $braintreeSaveCardContainer = document.querySelector('#braintreeSaveCardContainer');\n    var $creditCardFieldsContainer = document.querySelector('#braintreeCreditCardFieldsContainer');\n    var $braintree3DSecureContainer = document.querySelector('#braintree3DSecureContainer');\n    var $saveCardAndDefaultContainer = document.querySelector('#braintreeSaveCardAndDefaultContainer');\n    var changeCardOwnerInput;\n    if ($cardOwner) {\n        if (typeof (Event) === 'function') {\n            changeCardOwnerInput = new Event('changeCardOwnerInput');\n            $cardOwner.addEventListener('changeCardOwnerInput', function () {\n                'change';\n            }, false);\n        } else {\n            changeCardOwnerInput = document.createEvent('Event');\n            changeCardOwnerInput.initEvent('changeCardOwnerInput', true, true);\n        }\n    }\n\n    if ($creditCardFieldsContainer) {\n        $creditCardFieldsContainer.style.display = '';\n    }\n    if ($braintree3DSecureContainer) {\n        $braintree3DSecureContainer.style.display = 'none';\n    }\n\n    document.querySelector('#braintreeCreditCardErrorContainer').textContent = '';\n\n    if (!$creditCardList || $creditCardList.value === 'newcard') {\n        if ($saveCardAndDefaultContainer) {\n            $saveCardAndDefaultContainer.style.display = '';\n        }\n        $cardNumbeberPh.style.display = 'none';\n        $cardExpirationPh.style.display = 'none';\n        $cardCvvPh.style.display = 'none';\n        $cardOwnerPh.style.display = 'none';\n        $cardOwner.value = $cardOwner.getAttribute('data-new-cart-value');\n        $cardOwner.dispatchEvent(changeCardOwnerInput);\n        $cardOwner.style.display = '';\n        $cardOwner.parentNode.classList.remove('braintree-hosted-fields-invalid');\n        $cardNumbeber.parentNode.classList.remove('braintree-hosted-fields-invalid');\n        $cardCvv.parentNode.classList.remove('braintree-hosted-fields-invalid');\n        $cardExpiration.parentNode.classList.remove('braintree-hosted-fields-invalid');\n        $cardOwner.disabled = false;\n        $cardCvv.style.display = '';\n        $cardNumbeber.style.display = '';\n        $cardExpiration.style.display = '';\n        if ($braintreeSaveCardContainer) {\n            $braintreeSaveCardContainer.style.display = '';\n            $saveCreditCard.checked = true;\n            $saveCreditCard.disabled = false;\n        }\n        if ($creditCardMakeDefault) {\n            $creditCardMakeDefault.disabled = false;\n        }\n        cardOwnerUpdateClasses();\n        if ($creditCardList) {\n            document.querySelector('#braintreeCardPaymentMethod').value = $creditCardList[0].getAttribute('data-payment-method');\n        }\n    } else {\n        var selectedCard = bu.getSelectedData($creditCardList);\n        $cardNumbeberPh.innerHTML = selectedCard['data-number'].value;\n        $cardCvvPh.innerHTML = '***';\n        $cardExpirationPh.innerHTML = selectedCard['data-expiration'].value;\n        $cardOwnerPh.innerHTML = selectedCard['data-owner'].value;\n        $cardOwner.value = selectedCard['data-owner'].value;\n        $cardOwner.dispatchEvent(changeCardOwnerInput);\n        document.querySelector('#braintreeCardType').value = selectedCard['data-type'].value;\n        document.querySelector('#braintreeCardMaskNumber').value = selectedCard['data-number'].value;\n        $cardNumbeberPh.style.display = '';\n        $cardExpirationPh.style.display = '';\n        $cardCvvPh.style.display = '';\n        $cardOwnerPh.style.display = '';\n        $cardOwner.style.display = 'none';\n        if ($creditCardMakeDefault) {\n            if (selectedCard['data-default'].value === 'true') {\n                $creditCardMakeDefault.disabled = true;\n            } else {\n                $creditCardMakeDefault.disabled = false;\n            }\n            $creditCardMakeDefault.checked = true;\n        }\n        $cardOwner.disabled = true;\n        $cardCvv.style.display = 'none';\n        $cardNumbeber.style.display = 'none';\n        $cardExpiration.style.display = 'none';\n        if ($braintreeSaveCardContainer) {\n            $saveCreditCard.checked = false;\n            $braintreeSaveCardContainer.style.display = 'none';\n        }\n\n        document.querySelector('#braintreeCardPaymentMethod').value = selectedCard['data-payment-method'].value.toUpperCase();\n    }\n}\n\nfunction makeCardDefault() {\n    if ($saveCreditCard.checked) {\n        $creditCardMakeDefault.disabled = false;\n        $creditCardMakeDefault.checked = true;\n    } else {\n        $creditCardMakeDefault.disabled = true;\n        $creditCardMakeDefault.checked = false;\n    }\n}\n\nfunction initCardListAndSaveFunctionality() {\n    if ($saveCreditCard) {\n        $saveCreditCard.addEventListener('change', function () {\n            makeCardDefault();\n        });\n    }\n\n    if ($creditCardList) {\n        $creditCardList.addEventListener('change', function () {\n            cardListChange();\n        });\n    }\n    cardListChange();\n}\n\nfunction cardOwnerEvents() {\n    $cardOwner.addEventListener('focus', function () {\n        $cardOwner.parentNode.classList.add('braintree-hosted-fields-focused');\n    });\n    $cardOwner.addEventListener('blur', function () {\n        $cardOwner.parentNode.classList.remove('braintree-hosted-fields-focused');\n    });\n    $cardOwner.addEventListener('keyup', function () {\n        document.querySelector('#braintreeCardOwner').setAttribute('data-new-cart-value', $cardOwner.value);\n        cardOwnerUpdateClasses();\n    });\n    $cardOwner.addEventListener('change', function () {\n        cardOwnerUpdateClasses();\n    });\n}\n\nmodule.exports = {\n    creditcardErrorContainer,\n    convertCardTypeToDwFormat,\n    cardOwnerEvents,\n    initCardListAndSaveFunctionality\n};\n","'use strict';\nvar braintreeUtils = require('./braintreeUtils');\nvar loaderInstance = require('./loaderHelper');\n/* global braintreeUtils braintree $ Googlepay */\n\nvar bu = braintreeUtils;\nvar loader;\n\nfunction Constructor(initParams, $btn) {\n    this.$btn = $btn;\n    var $errorContainer = document.createElement('div');\n    $errorContainer.className = 'error';\n    var $loaderContainter = document.querySelector('.braintreeGooglepayLoader');\n    loader = loaderInstance($loaderContainter);\n    this.loader = loader;\n    $btn.parentNode.insertBefore($errorContainer, $btn.nextSibling);\n    this.params = initParams;\n    this.er = bu.createErrorInstance($errorContainer);\n}\n\nConstructor.prototype.createGooglepay = function () {\n    var that = this;\n    var params = that.params;\n\n    var paymentsClient = new google.payments.api.PaymentsClient({ // eslint-disable-line no-undef\n        environment: 'TEST' // Or 'PRODUCTION'\n    });\n\n    braintree.client.create({\n        authorization: params.clientToken\n    }, function (clientErr, clientInstance) {\n        if (clientErr) {\n            that.er.show(clientErr);\n            return;\n        }\n        braintree.googlePayment.create({\n            client: clientInstance,\n            googlePayVersion: 2\n        }, function (googlePaymentErr, googlePaymentInstance) {\n            if (googlePaymentErr) {\n                that.er.show(googlePaymentErr);\n                return;\n            }\n            var allowedPaymentMethods = googlePaymentInstance.createPaymentDataRequest().allowedPaymentMethods;\n            paymentsClient.isReadyToPay({\n                // see https://developers.google.com/pay/api/web/reference/object#IsReadyToPayRequest\n                apiVersion: 2,\n                apiVersionMinor: 0,\n                allowedPaymentMethods: allowedPaymentMethods\n            }).then(function (response) {\n                if (response.result) {\n                    function onGooglePaymentButtonClicked() { // eslint-disable-line no-inner-declarations\n                        loader.show();\n                        var paymentDataRequest = googlePaymentInstance.createPaymentDataRequest({\n                            transactionInfo: {\n                                currencyCode: params.options.currency,\n                                totalPriceStatus: 'FINAL',\n                                totalPrice: String(params.options.amount)\n                            },\n                            shippingAddressRequired: params.options.isShippingAddressRequired,\n                            shippingAddressParameters: {\n                                allowedCountryCodes: ['US'],\n                                phoneNumberRequired: true\n                            },\n                            emailRequired: true\n                        });\n                        var cardPaymentMethod = paymentDataRequest.allowedPaymentMethods[0];\n                        cardPaymentMethod.parameters.billingAddressRequired = true;\n                        cardPaymentMethod.parameters.billingAddressParameters = {\n                            format: 'FULL',\n                            phoneNumberRequired: true\n                        };\n                        paymentsClient.loadPaymentData(paymentDataRequest).then(function (paymentData) {\n                            googlePaymentInstance.parseResponse(paymentData, function (err, result) {\n                                if (err) {\n                                    loader.hide();\n                                    // Handle parsing error\n                                }\n                                params.onTokenizePayment(paymentData, result);\n                            });\n                            loader.hide();\n                        }).catch(function (err) {\n                            loader.hide();\n                            // eslint-disable-next-line no-console\n                            console.log(err);\n                        });\n                    }\n                    const button = paymentsClient.createButton({ onClick: onGooglePaymentButtonClicked });\n                    that.$btn.appendChild(button);\n                    loader.hide();\n                }\n            }).catch(function (err) {\n                loader.hide();\n                // eslint-disable-next-line no-console\n                console.log(err);\n            });\n        });\n        // Set up other Braintree components\n    });\n};\n\nConstructor.prototype.updateAmount = function (amount) {\n    this.params.options.amount = amount;\n};\n\nmodule.exports = {\n    init: function (params, $btn) {\n        bu.clientToken = params.clientToken;\n        return new Constructor(params, $btn);\n    }\n};\n","'use strict';\nvar creditCard = require('../braintreeCreditCard');\n\nvar $continueButton = document.querySelector('button.submit-payment');\n\n/**\n * Gets required Additional shipping info for 3ds\n *\n * @param {Object} orderAddress - User's shipping address\n * @returns {Object} an object with required fields\n */\n\nfunction getShippingAdditionalInfo(orderAddress) {\n    return {\n        workPhoneNumber: orderAddress.phone,\n        shippingGivenName: orderAddress.recipientName.split(' ').slice(0, -1).join(' '),\n        shippingSurname: orderAddress.recipientName.split(' ').slice(-1).join(' '),\n        shippingPhone: orderAddress.phone,\n        shippingAddress: {\n            streetAddress: orderAddress.line1,\n            extendedAddress: orderAddress.line2,\n            locality: orderAddress.city,\n            region: orderAddress.state,\n            postalCode: orderAddress.postalCode,\n            countryCodeAlpha2: orderAddress.countryCode\n        }\n    };\n}\n\nfunction updateData() {\n    $.ajax({\n        url: document.querySelector('.js_braintree_getOrderInfoUrl').value,\n        type: 'get',\n        dataType: 'json',\n        success: function (data) {\n            data.shippingAdditionalInfo = data.shippingAddress ? getShippingAdditionalInfo(data.shippingAddress) : null;\n            creditCard.updateData(data);\n        },\n        error: function () {\n            window.location.reload();\n        }\n    });\n}\n\nfunction initCreditCardFields() {\n    document.querySelectorAll('.js_braintree_creditCardFields').forEach(function (el) {\n        var $container = el;\n        if (JSON.parse($container.getAttribute('data-is-inited'))) {\n            return;\n        }\n        var config = JSON.parse($container.getAttribute('data-braintree-config'));\n        if (typeof config !== 'object' || config === null) {\n            // eslint-disable-next-line no-console\n            console.error(el, '.js_braintree_creditCardFields has not valid data-braintree-config');\n            return;\n        }\n        config.continueButton = $continueButton;\n        creditCard.initFields(config, $container);\n        $container.setAttribute('data-is-inited', true);\n    });\n}\n\nmodule.exports = {\n    initCreditCardFields,\n    getShippingAdditionalInfo,\n    updateData\n};\n","'use strict';\n\nvar braintreeUtils = require('../braintreeUtils');\nvar loaderInstance = require('../loaderHelper');\nvar { showPDPButton, hidePDPButton } = require('./paypalHelper');\n\nvar $braintreePDPButton = document.querySelector('.braintree_pdp_button');\n\nfunction staticImageHandler() {\n    var $loaderContainter = document.querySelector('.braintreePayPalLoader');\n    var loader = loaderInstance($loaderContainter);\n    var $staticPaypalButton = document.querySelector('.braintree-static-paypal-button');\n    var checkoutFromCartUrl = $staticPaypalButton.getAttribute('data-checkout-from-cart-url');\n    loader.show();\n    if ($braintreePDPButton && $braintreePDPButton.style.display === '') {\n        var res = braintreeUtils.pdpOnlickForAsignedPaypalPayment();\n        if (res.error) {\n            loader.hide();\n            // eslint-disable-next-line no-unused-expressions\n            window.location.reload;\n            return;\n        }\n    }\n\n    return $.ajax({\n        url: checkoutFromCartUrl,\n        type: 'POST',\n        success: function (data) {\n            loader.hide();\n            sessionStorage.setItem('pageState', 'cart');\n            window.location.href = data.redirectUrl;\n        },\n        error: function () {\n            loader.hide();\n        }\n    });\n}\n\nfunction paypalStaticPdpButtonHandler() {\n    if ($braintreePDPButton) {\n        var $price = document.querySelector('.price .sales .value');\n        var isZeroAmount = false;\n        var $miniCartQuantity = document.querySelector('.minicart-quantity');\n        var $addToCartButton = document.querySelector('.add-to-cart') || document.querySelector('.add-to-cart-global');\n\n        // Check minicart quantity and hide PDPbutton if it is not empty\n        if (($miniCartQuantity && parseInt($miniCartQuantity.textContent, 0) > 0)\n            || ($price && $price.getAttribute('content') === '0.00')) {  // Check if product price is zero\n            hidePDPButton($braintreePDPButton);\n        }\n\n        if ($addToCartButton.disabled) {\n            hidePDPButton($braintreePDPButton);\n        }\n\n        $('body').on('product:afterAddToCart', function () {\n            hidePDPButton($braintreePDPButton);\n        });\n\n        $('body').on('cart:update', function () {\n            $miniCartQuantity = parseInt(document.querySelector('.minicart-quantity').textContent, 0);\n            if ($addToCartButton.disabled) {\n                hidePDPButton($braintreePDPButton);\n            }\n            if ($miniCartQuantity === 0 && !$addToCartButton.disabled) {\n                showPDPButton($braintreePDPButton);\n            }\n        });\n\n        $('body').on('product:statusUpdate', function () {\n            $miniCartQuantity = parseInt(document.querySelector('.minicart-quantity').textContent, 0);\n            $price = document.querySelector('.price .sales .value');\n            isZeroAmount = false;\n            if ($price) {\n                isZeroAmount = $price.getAttribute('content') === '0.00';\n            }\n\n            if ($miniCartQuantity === 0) {\n                if ($addToCartButton.disabled || isZeroAmount) {\n                    hidePDPButton($braintreePDPButton);\n                }\n                if (!$addToCartButton.disabled && !isZeroAmount) {\n                    showPDPButton($braintreePDPButton);\n                }\n            }\n        });\n    }\n}\n\nmodule.exports = {\n    staticImageHandler,\n    paypalStaticPdpButtonHandler\n};\n","/* eslint-disable no-use-before-define */\n'use strict';\n\n/* global braintreeUtils braintree $ VenmoSession */\nvar braintreeUtils = require('./braintreeUtils');\nvar loaderInstance = require('./loaderHelper');\n\nvar bu = braintreeUtils;\n\nfunction Constructor(initParams, $btn) {\n    var $errorContainer = document.createElement('div');\n    $errorContainer.className = 'venmo-error';\n    var $loaderContainter = document.createElement('div');\n    $loaderContainter.className = 'braintree-loader';\n    this.$braintreeVenmoRiskDataInput = document.querySelector('input[name=braintreeVenmoRiskData]');\n\n    this.$btn = $btn;\n    this.params = initParams;\n\n    if (initParams.$errorContainer) {\n        $errorContainer = initParams.$errorContainer;\n        delete initParams.$errorContainer;\n    }\n\n    if (initParams.$loaderContainer) {\n        $loaderContainter = initParams.$loaderContainer;\n    }\n\n    $btn.parentNode.insertBefore($errorContainer, $btn.nextSibling);\n\n    this.er = bu.createErrorInstance($errorContainer);\n    this.loader = loaderInstance($loaderContainter);\n}\n\nConstructor.prototype.createVenmo = function () {\n    var that = this;\n    var isBrowserSupported;\n    that.loader.show();\n\n    braintree.client.create({\n        authorization: bu.clientToken\n    }, function (clientErr, clientInstance) {\n            // Stop if there was a problem creating the client.\n            // This could happen if there is a network error or if the authorization\n            // is invalid.\n        if (clientErr) {\n            that.er.show(clientErr);\n            return;\n        }\n\n        braintree.dataCollector.create({\n            client: clientInstance,\n            paypal: true\n        }, function (dataCollectorErr, dataCollectorInstance) {\n            if (dataCollectorErr) {\n                that.er.show(dataCollectorErr);\n                return;\n            }\n\n            if (that.$braintreeVenmoRiskDataInput) {\n                that.$braintreeVenmoRiskDataInput.value = dataCollectorInstance.deviceData;\n            }\n            that.loader.hide();\n        });\n\n        isBrowserSupported = braintree.venmo.isBrowserSupported({ allowNewBrowserTab: false });\n        // Verify browser support before proceeding.\n        if (isBrowserSupported) {\n            braintree.venmo.create({\n                client: clientInstance,\n                allowNewBrowserTab: false,\n                ignoreHistoryChanges: true\n            }, function (venmoErr, venmoInstance) {\n                if (venmoErr) {\n                    that.er.show(venmoErr);\n                    return;\n                }\n\n                        // Verify browser support before proceeding.\n                if (!venmoInstance.isBrowserSupported()) {\n                    that.params.deviceNotSupportVenmo();\n                    that.loader.hide();\n                    return;\n                }\n\n                that.$btn.addEventListener('click', function () {\n                    if (!that.params.venmoAccountPage && !that.params.onClick()) {\n                        return;\n                    }\n                    venmoInstance.tokenize({ processResultsDelay: 10 }, function (tokenizeErr, payload) {\n                        that.loader.show();\n\n                        if (tokenizeErr) {\n                            handleVenmoError(tokenizeErr);\n                        } else {\n                            handleVenmoSuccess(payload);\n                        }\n                    });\n                    return;\n                });\n            });\n        } else {\n            that.params.deviceNotSupportVenmo();\n            that.loader.hide();\n            localStorage.setItem('venmoBrowserSupported', isBrowserSupported);\n            return;\n        }\n    });\n\n    function handleVenmoError(err) {\n        that.er.show(err);\n        that.loader.hide();\n    }\n    function handleVenmoSuccess(payload) {\n        that.params.onTokenizePayment(payload);\n        that.loader.hide();\n    }\n};\n\nmodule.exports = {\n    init: function (params, $btn) {\n        var ins = new Constructor(params, $btn);\n        bu.clientToken = params.clientToken;\n        return ins.createVenmo();\n    }\n};\n","'use strict';\nvar braintreeUtils = require('../braintreeUtils');\nvar helper = require('../helper');\n\nvar $accountsList = document.querySelector('#braintreeVenmoAccountsList');\nvar $saveVenmoAccountCountainerEl = document.querySelector('#braintreeSaveVenmoAccountContainer');\nvar $saveVenmoAccountEl = document.querySelector('#braintreeSaveVenmoAccount');\nvar $venmoAccounMakeDefaultEl = document.querySelector('#braintreeVenmoAccountMakeDefault');\n\nvar $venmoButton = document.querySelector('.js_braintree_venmo_button');\nvar $braintreeVenmoAccount = document.getElementById('braintreeVenmoAccount');\nvar $venmoAccount = document.querySelector('.js_braintree_used_venmo_account');\nvar $braintreeVenmoUserId = document.querySelector('#braintreeVenmoUserId');\n\nvar $venmoContent = document.querySelector('.js_braintree_venmoContent');\n\nvar $addVenmoAccountBtn = document.querySelector('.add-venmo-account');\nvar $venmoAccountWrapper = document.querySelector('.js_braintree_accountVenmoButton_wrapper');\n\nfunction initAccountListAndSaveFunctionality() {\n    function accountsListChange() { // eslint-disable-line require-jsdoc\n        if ($accountsList.value === 'newaccount') {\n            if ($saveVenmoAccountCountainerEl) {\n                $saveVenmoAccountCountainerEl.style.display = '';\n                $saveVenmoAccountEl.checked = true;\n                $saveVenmoAccountEl.disabled = false;\n            }\n            if ($venmoAccounMakeDefaultEl) {\n                $venmoAccounMakeDefaultEl.disabled = false;\n            }\n        } else {\n            var selectedAccount = braintreeUtils.getSelectedData($accountsList);\n            if (selectedAccount && $venmoAccounMakeDefaultEl) {\n                if (selectedAccount['data-default'].value === 'true') {\n                    $venmoAccounMakeDefaultEl.disabled = true;\n                } else {\n                    $venmoAccounMakeDefaultEl.disabled = false;\n                }\n                $venmoAccounMakeDefaultEl.checked = true;\n            }\n            if ($saveVenmoAccountCountainerEl) {\n                $saveVenmoAccountEl.checked = false;\n                $saveVenmoAccountCountainerEl.style.display = 'none';\n            }\n        }\n    }\n\n    if ($saveVenmoAccountEl) {\n        $saveVenmoAccountEl.addEventListener('change', function () {\n            if ($saveVenmoAccountEl.checked) {\n                $venmoAccounMakeDefaultEl.disabled = false;\n                $venmoAccounMakeDefaultEl.checked = true;\n            } else {\n                $venmoAccounMakeDefaultEl.disabled = true;\n                $venmoAccounMakeDefaultEl.checked = false;\n            }\n        });\n    }\n\n    if ($accountsList) {\n        $accountsList.addEventListener('change', accountsListChange);\n        accountsListChange();\n    }\n}\n\nfunction showVenmoAccount() {\n    if (!$accountsList) {\n        $venmoAccount.classList.remove('used-venmo-account-hide');\n        $braintreeVenmoAccount.options[0].text = $braintreeVenmoUserId.value;\n    }\n\n    $venmoButton.style.display = 'none';\n    helper.continueButtonToggle(false);\n}\n\nfunction hideShowButtons() {\n    if ($accountsList.value === 'newaccount') {\n        $venmoButton.style.display = '';\n        helper.continueButtonToggle(true);\n        $venmoContent.setAttribute('data-paypal-is-hide-continue-button', true);\n    } else {\n        $venmoButton.style.display = 'none';\n        helper.continueButtonToggle(false);\n        $venmoContent.setAttribute('data-paypal-is-hide-continue-button', false);\n    }\n}\n\nfunction createLoaderContainter($target) {\n    var $loaderContainter = document.createElement('div');\n    $loaderContainter.className = 'venmo-braintree-loader';\n    helper.continueButtonToggle(true);\n\n    return $target.parentNode.insertBefore($loaderContainter, $target);\n}\n\nfunction hideVenmoButton() {\n    $venmoButton.parentElement.firstElementChild.style.display = 'none';\n    document.querySelector('.payment-options[role=tablist] .nav-item[data-method-id=\"Venmo\"]').style.display = 'none'; // Remove the venmo select payment method radiobutton\n}\n\n/**\n * updates the billing address form values within saved billing\n * @param {Object} billingAddress - the billing Address\n */\nfunction updateBillingAddressFormValues(billingAddress) {\n    var form = $('form[name=dwfrm_billing]');\n    var inputNames = ['firstName', 'lastName', 'address1', 'address2', 'city', 'postalCode', 'country'];\n    if (!form) return;\n\n    $.each(inputNames, function (index, value) {\n        $(`input[name$=_${value}]`, form).val(decodeURIComponent(billingAddress[value]));\n    });\n    $('select[name$=_stateCode],input[name$=_stateCode]', form)\n        .val(billingAddress.stateCode);\n}\n\nfunction showVenmoAccountBtn() {\n    $addVenmoAccountBtn.style.display = 'none';\n    $venmoAccountWrapper.style.display = 'block';\n}\nfunction hideVenmoAccountBtn() {\n    $addVenmoAccountBtn.style.display = 'block';\n    $venmoAccountWrapper.style.display = 'none';\n}\n\nfunction showVenmoAccountError() {\n    $addVenmoAccountBtn.style.display = 'none';\n    $venmoAccountWrapper.style.display = 'block';\n    [].slice.call($venmoAccountWrapper.children).forEach(function (item) {\n        if (!item.classList.contains('error')) {\n            item.style.display = 'none';\n        }\n    });\n}\n\nmodule.exports = {\n    showVenmoAccount,\n    initAccountListAndSaveFunctionality,\n    hideShowButtons,\n    createLoaderContainter,\n    hideVenmoButton,\n    updateBillingAddressFormValues,\n    showVenmoAccountBtn,\n    hideVenmoAccountBtn,\n    showVenmoAccountError\n};\n","'use strict';\nvar braintreeUtils = require('../braintreeUtils');\nvar applePay = require('../braintreeApplepay');\nvar { isValidInputField } = require('./../helper');\n\n\nvar $applePayButton = document.querySelector('.js_braintree_applepay_button');\nvar $applepayButtonsWrap = document.querySelector('.js_braintree_applepayButtonsWrap');\nvar $applepayDataMethod = document.querySelector('.payment-options[role=tablist] .nav-item[data-method-id=\"ApplePay\"]');\nvar $emailField = document.querySelector('.contact-info-block [name=dwfrm_billing_contactInfoFields_email]');\nvar $phoneField = document.querySelector('.contact-info-block [name=dwfrm_billing_contactInfoFields_phone]');\n\nfunction makeApplePayButtonDisabled() {\n    $applePayButton.classList.add('js_braintree_applepay_button_disabled');\n}\n\nfunction hideApplePayButton() {\n    $applepayButtonsWrap.style.display = 'none'; // Remove the ApplePay select payment method radiobutton\n    if ($applepayDataMethod) {\n        $applepayDataMethod.style.display = 'none';\n    }\n}\n\nfunction showApplePayButton() {\n    $applepayButtonsWrap.style.display = 'block'; // Show the ApplePay select payment method radiobutton\n    if ($applepayDataMethod) {\n        $applepayDataMethod.style.display = 'block';\n    }\n}\n\nfunction initApplepayButton() {\n    document.querySelectorAll('.js_braintree_applepay_button').forEach(function (el) {\n        var $btn = el;\n        if (JSON.parse($btn.getAttribute('data-is-inited'))) {\n            return;\n        }\n        var config = JSON.parse($btn.getAttribute('data-braintree-config'));\n        if (typeof config !== 'object' || config === null) {\n            // eslint-disable-next-line no-console\n            console.error(el, 'not valid data-braintree-config');\n            return;\n        }\n\n        $btn.addEventListener('braintree:deviceNotSupportApplePay', function () {\n            hideApplePayButton();\n        }, false);\n        $btn.addEventListener('braintree:deviceSupportApplePay', function () {\n            showApplePayButton();\n        }, false);\n        $btn.addEventListener('braintree:ApplePayCanNotMakePaymentWithActiveCard', function () {\n            makeApplePayButtonDisabled();\n        }, false);\n\n        config.isRequiredBillingContactFields = true;\n        config.isRequiredShippingContactFields = true;\n        var applePayIns = applePay.init(config, $btn);\n\n        $btn.addEventListener('click', function () {\n            applePayIns.startPayment();\n        });\n\n        function updateCartApplepayAmount() {\n            if (!applePayIns) {\n                return;\n            }\n            applePayIns.loader.show();\n            $.ajax({\n                url: config.getOrderInfoUrl,\n                type: 'get',\n                dataType: 'json',\n                success: function (data) {\n                    applePayIns.loader.hide();\n                    applePayIns.updateAmount(data.amount);\n                },\n                error: function () {\n                    window.location.reload();\n                }\n            });\n            return;\n        }\n        $('body').on('braintree:updateCartTotals', updateCartApplepayAmount);\n\n        $btn.addEventListener('braintree:ApplePayPaymentAuthorized', function (e) {\n            var postData = {\n                braintreeApplePayBillingAddress: JSON.stringify(e.detail.data.billingAddress),\n                braintreeApplePayShippingAddress: JSON.stringify(e.detail.data.shippingAddress),\n                braintreeApplePayNonce: e.detail.data.nonce\n            };\n            applePayIns.loader.show();\n            braintreeUtils.postData(config.returnUrl, postData);\n        }, false);\n\n        $btn.setAttribute('data-is-inited', true);\n    });\n}\n\nfunction applepayPayment(continueButton) {\n    var config = JSON.parse($applePayButton.getAttribute('data-braintree-config'));\n    if (typeof config !== 'object' || config === null) {\n        // eslint-disable-next-line no-console\n        console.error($applePayButton, 'not valid data-braintree-config');\n    }\n    var applepayButton = $('.js_braintree_applepay_button');\n    applepayButton.on('braintree:deviceNotSupportApplePay', function () {\n        hideApplePayButton();\n    });\n    applepayButton.on('braintree:deviceSupportApplePay', function () {\n        showApplePayButton();\n    });\n    applepayButton.on('braintree:ApplePayCanNotMakePaymentWithActiveCard', function () {\n        makeApplePayButtonDisabled();\n    });\n\n    config.isRequiredBillingContactFields = true;\n    var applePayIns = applePay.init(config, $applePayButton);\n\n    function authorizedApplePayPayment(e) {\n        applePayIns.loader.show();\n        document.querySelector(('#braintreeApplePayNonce')).value = e.detail.data.nonce;\n        document.querySelector(('#braintreeApplePayBillingAddress')).value = JSON.stringify(e.detail.data.billingAddress);\n        continueButton.click();\n    }\n\n    if (!applePayIns) return;\n    $applePayButton.addEventListener('click', function () {\n        if (isValidInputField($emailField) && isValidInputField($phoneField)) {\n            return applePayIns.startPayment();\n        }\n    });\n\n    applepayButton.on('braintree:ApplePayPaymentAuthorized', authorizedApplePayPayment);\n\n    function appleUpdateAmountData() { // eslint-disable-line no-inner-declarations\n        applePayIns.loader.show();\n        $.ajax({\n            url: config.getOrderInfoUrl,\n            type: 'get',\n            dataType: 'json',\n            success: function (data) {\n                applePayIns.loader.hide();\n                applePayIns.updateAmount(data.amount);\n            },\n            error: function () {\n                window.location.reload();\n            }\n        });\n    }\n    $('body').on('checkout:updateCheckoutView', appleUpdateAmountData);\n    appleUpdateAmountData();\n}\n\nmodule.exports = {\n    initApplepayButton,\n    applepayPayment\n};\n","'use strict';\nvar braintreeUtils = require('./braintreeUtils');\nvar loaderInstance = require('./loaderHelper');\n/* global braintreeUtils braintree $ ApplePaySession */\n\nvar bu = braintreeUtils;\nvar loader;\n\nfunction Constructor(initParams, $btn) {\n    this.$btn = $btn;\n    var $errorContainer = document.createElement('div');\n    $errorContainer.className = 'error';\n    var $loaderContainter = document.querySelector('.braintreeApplePayLoader');\n    loader = loaderInstance($loaderContainter);\n    this.loader = loader;\n    $btn.parentNode.insertBefore($errorContainer, $btn.nextSibling);\n    this.params = initParams;\n    this.er = bu.createErrorInstance($errorContainer);\n}\n\nConstructor.prototype.createApplePay = function () {\n    var that = this;\n    var params = that.params;\n    loader.show();\n\n    braintree.client.create({\n        authorization: bu.clientToken\n    }, function (clientErr, clientInstance) {\n        if (clientErr) {\n            that.er.show(clientErr);\n            return;\n        }\n\n        braintree.applePay.create({\n            client: clientInstance\n        }, function (error, applePayInstance) {\n            loader.hide();\n            if (error) {\n                that.er.show(error);\n                return;\n            }\n            that.createApplePaySession = function () {\n                var paymentRequest = applePayInstance.createPaymentRequest({\n                    total: {\n                        label: params.options.displayName,\n                        amount: params.options.amount\n                    }\n                });\n                if (params.isRequiredBillingContactFields) {\n                    paymentRequest.requiredBillingContactFields = ['postalAddress', 'name'];\n                }\n                if (params.isRequiredShippingContactFields) {\n                    paymentRequest.requiredShippingContactFields = ['postalAddress', 'name', 'phone', 'email'];\n                }\n\n                var session = new ApplePaySession(1, paymentRequest);\n\n                session.onvalidatemerchant = function (event) {\n                    loader.show();\n                    applePayInstance.performValidation({\n                        validationURL: event.validationURL,\n                        displayName: params.options.displayName\n                    }, function (eventError, merchantSession) {\n                        loader.hide();\n                        if (eventError) {\n                            that.er.show(eventError);\n                            session.abort();\n                            return;\n                        }\n                        session.completeMerchantValidation(merchantSession);\n                    });\n                };\n                session.onpaymentauthorized = function (event) {\n                    loader.show();\n                    applePayInstance.tokenize({\n                        token: event.payment.token\n                    }, function (eventError, payload) {\n                        loader.hide();\n                        if (eventError) {\n                            that.er.show(eventError);\n                            session.completePayment(ApplePaySession.STATUS_FAILURE);\n                            return;\n                        }\n\n                        session.completePayment(ApplePaySession.STATUS_SUCCESS);\n\n                        var data = {\n                            event: event,\n                            payload: payload,\n                            nonce: payload.nonce\n                        };\n                        var shippingContact = event.payment.shippingContact;\n                        if (shippingContact) {\n                            data.shippingAddress = {\n                                streetAddress: shippingContact.addressLines[0],\n                                extendedAddress: shippingContact.addressLines[1],\n                                locality: shippingContact.locality,\n                                region: shippingContact.administrativeArea.toUpperCase(),\n                                postalCode: shippingContact.postalCode,\n                                countryCodeAlpha2: shippingContact.countryCode.toUpperCase(),\n                                firstName: shippingContact.givenName,\n                                lastName: shippingContact.familyName,\n                                phone: shippingContact.phoneNumber,\n                                email: shippingContact.emailAddress\n                            };\n                        } else {\n                            shippingContact = {\n                                emailAddress: document.querySelector('.contact-info-block [name=dwfrm_billing_contactInfoFields_email]').value,\n                                phoneNumber: document.querySelector('.contact-info-block [name=dwfrm_billing_contactInfoFields_phone]').value\n                            };\n                        }\n\n                        var billingContact = event.payment.billingContact;\n                        if (billingContact) {\n                            data.billingAddress = {\n                                streetAddress: billingContact.addressLines[0],\n                                extendedAddress: billingContact.addressLines[1],\n                                locality: billingContact.locality,\n                                region: billingContact.administrativeArea.toUpperCase(),\n                                postalCode: billingContact.postalCode,\n                                countryCodeAlpha2: billingContact.countryCode.toUpperCase(),\n                                firstName: billingContact.givenName,\n                                lastName: billingContact.familyName,\n                                email: shippingContact.emailAddress,\n                                phone: shippingContact.phoneNumber\n                            };\n                        }\n\n                        that.$btn.dispatchEvent(new CustomEvent('braintree:ApplePayPaymentAuthorized', {\n                            detail: {\n                                data: data\n                            }\n                        }));\n                    });\n                };\n                session.begin();\n            };\n            var promise = ApplePaySession.canMakePaymentsWithActiveCard(applePayInstance.merchantIdentifier);\n            promise.then(function (canMakePaymentsWithActiveCard) {\n                if (!canMakePaymentsWithActiveCard) {\n                    that.$btn.dispatchEvent(new CustomEvent('braintree:ApplePayCanNotMakePaymentWithActiveCard'));\n                    that.createApplePaySession = null;\n                    return;\n                }\n            });\n        });\n    });\n};\n\nConstructor.prototype.startPayment = function () {\n    this.er.hide();\n    if (this.createApplePaySession) {\n        this.createApplePaySession();\n    }\n};\n\nConstructor.prototype.updateAmount = function (amount) {\n    this.params.options.amount = amount;\n};\n\nmodule.exports = {\n    init: function (params, $btn) {\n        if (!window.ApplePaySession) {\n            $btn.dispatchEvent(new CustomEvent('braintree:deviceNotSupportApplePay'));\n            return false;\n        }\n        $btn.dispatchEvent(new CustomEvent('braintree:deviceSupportApplePay'));\n        var ins = new Constructor(params, $btn);\n        bu.clientToken = params.clientToken;\n        $.extend(bu.messages, params.messages);\n        ins.createApplePay();\n        return ins;\n    }\n};\n\n","/* eslint-disable no-use-before-define */\n'use strict';\n\n/* global braintreeUtils braintree $ VenmoSession */\nvar braintreeUtils = require('./braintreeUtils');\nvar loaderInstance = require('./loaderHelper');\nvar { isValidInputField } = require('./helper');\nvar scrollAnimate = require('../../../../../../app_storefront_base/cartridge/client/default/js/components/scrollAnimate');\nconst errorText = 'An error occurred. Please try again later or choose different payment method.';\n\nvar bu = braintreeUtils;\nvar loader;\n\nfunction Constructor(initParams, $btn) {\n    this.$btn = $btn;\n    var $errorContainer = document.createElement('div');\n    $errorContainer.className = 'lpm-error';\n    var $loaderContainter = document.querySelector('.lpmLoader');\n    loader = loaderInstance($loaderContainter);\n    this.loader = loader;\n    $btn.parentNode.insertBefore($errorContainer, $btn.nextSibling);\n    this.params = initParams;\n    this.er = bu.createErrorInstance($errorContainer);\n}\n\nConstructor.prototype.createLocalPayment = function () {\n    var that = this;\n    var params = that.params;\n    // Create a client.\n    braintree.client.create({\n        authorization: params.clientToken\n    }).then(function (clientInstance) {\n        // Create a local payment component.\n        return braintree.localPayment.create({\n            client: clientInstance\n        });\n    }).then(function (localPaymentInstance) {\n        function createLocalPaymentClickListener(type) {\n            var emailField = document.querySelector('#email');\n            return function (event) {\n                event.preventDefault();\n                if (emailField && emailField.value !== '' && !isValidInputField(emailField)) {\n                    that.loader.hide();\n                    return;\n                }\n\n                that.loader.show();\n                document.querySelector('.processingMsg').style.display = 'block';\n                $.getJSON(that.params.getOrderInfoUrl)\n                    .then(({ shippingAddress }) => {\n                        const reqData = Object.assign(createRequestData(\n                            shippingAddress, that.params, type),\n                            { onPaymentStart: (_, start) => start() });\n                        localPaymentInstance.startPayment(reqData).then(({ nonce, details }) => {\n                            var processingMsg = document.querySelector('.processingMsg');\n                            var finalProcessingMsg = document.querySelector('.finalProcessingMsg');\n                            processingMsg.style.display = 'none';\n                            finalProcessingMsg.style.display = 'block';\n                            return $.ajax({\n                                url: params.paymentConfirmUrl,\n                                type: 'POST',\n                                contentType: 'application/json',\n                                data: JSON.stringify({\n                                    nonce: nonce,\n                                    lpmName: type,\n                                    details: details\n                                })\n                            });\n                        }).then(({ redirectUrl }) => {\n                            that.loader.hide();\n                            window.location.href = redirectUrl;\n                        }).catch(function () {\n                            that.loader.hide();\n                        });\n                    })\n                    .catch(function (err) {\n                        if (err.responseText !== '') { errorText = err.responseText; }\n                        that.loader.hide();\n                        $('.error-message').show();\n                        $('.error-message-text').text(errorText);\n                        scrollAnimate($('.error-message'));\n                    });\n            };\n        }\n        var paymentMethod = that.$btn.dataset.localPaymentMethodName;\n        that.$btn.addEventListener('click', createLocalPaymentClickListener(paymentMethod));\n    });\n};\n\nfunction createRequestData(shippingData, params, type) {\n    var recipientName = shippingData.recipientName.split(' ');\n    shippingData.firstName = recipientName[0];\n    shippingData.lastName = recipientName[1];\n    return {\n        paymentType: type,\n        amount: params.options.amount,\n        fallback: {\n            url: params.fallbackUrl + '?lpmName=' + type,\n            buttonText: 'Complete Payment'\n        },\n        currencyCode: params.options.currency,\n        shippingAddressRequired: false,\n        email: document.querySelector('#email').value,\n        phone: shippingData && shippingData.phone,\n        givenName: shippingData && shippingData.firstName,\n        surname: shippingData && shippingData.lastName,\n        address: {\n            countryCode: shippingData && shippingData.countryCode\n        }\n    };\n}\n\nConstructor.prototype.updateShippingData = function () {\n    var localIns = this;\n    localIns.loader.show();\n    return $.getJSON(localIns.params.getOrderInfoUrl);\n};\n\n\nConstructor.prototype.updateShippingAddress = function (data) {\n    if (data) {\n        var recipientName = data.recipientName.split(' ');\n        data.firstName = recipientName[0];\n        data.lastName = recipientName[1];\n        this.shippingData = data;\n    }\n};\n\nmodule.exports = {\n    init: function (params, $btn) {\n        bu.clientToken = params.clientToken;\n        return new Constructor(params, $btn);\n    }\n};\n","'use strict';\n\nmodule.exports = function () {\n    /* global braintreeUtils braintree $ */\n    var helper = require('./helper');\n    var applepayHelper = require('./applepay/applepayHelper');\n    var creditcardHelper = require('./creditcard/creditcardHelper');\n    var creditcardPayment = require('./creditcard/creditcardPayment');\n    var creditCardFields = require('./creditcard/creditcardFields');\n    var creditCardAccount = require('./creditcard/creditcardAccount');\n    var minicartHelper = require('./paypal/minicartHelper');\n    var paypalAccount = require('./paypal/paypalAccount');\n    var paypalPayment = require('./paypal/paypalPayment');\n    var paypalHelper = require('./paypal/paypalHelper');\n    var paypalSavedAccountHandler = require('./paypal/paypalSavedAccountHandler');\n    var local = require('./local/localPayment'); // eslint-disable-line no-unused-vars\n    var orderStage = document.getElementById('checkout-main');\n    var pageState = sessionStorage.getItem('pageState');\n\n    var $form = document.querySelector('#dwfrm_billing'); // eslint-disable-line no-unused-vars\n    var $cartPage = document.querySelectorAll('.cart-page');\n    var $continueButton = document.querySelector('button.submit-payment');\n    var $summaryDetails = document.querySelector('.summary-details .payment-details');\n    var $addCreditCardForm = document.querySelector('.js_braintree_addCreditCardForm');\n    var $paypalContent = document.querySelector('.js_braintree_paypalContent');\n    var $creditCardContent = document.querySelector('.js_braintree_creditCardContent');\n    var $applepayContent = document.querySelector('.js_braintree_applepayContent');\n    var $braintreePaypalNonce = document.querySelector('#braintreePaypalNonce');\n    var $minicartPopover = document.querySelector('.minicart .popover');\n    var $creditCardList = document.querySelector('#braintreeCreditCardList');\n    var $staticPaypalButton = document.querySelector('.braintree-static-paypal-button');\n\n    var venmoAccount = require('./venmo/venmoAccount');\n    var venmoPayment = require('./venmo/venmoPayment');\n    var $venmoContent = document.querySelector('.js_braintree_venmoContent');\n\n    var googlePayAccount = require('./googlepay/googlepayAccount');\n    var googlepayPayment = require('./googlepay/googlepayPayment');\n    var googlepayHelper = require('./googlepay/googlepayHelper');\n    var $googlepayContent = document.querySelector('.js_braintree_googlepayContent');\n    var $googlepayOnCart = document.querySelector('.braintree-cart-google-button');\n    var $addGooglePayAccountForm = document.querySelector('.js_braintree_addGooglePayAccountForm');\n    var $braintreeGooglePayNonce = document.querySelector('#braintreeGooglePayNonce');\n\n    var braintreeSrc = require('./src/srcPayment');\n    var $srcContent = document.querySelector('.js_braintree_srcContent');\n\n    if (window.NodeList && !NodeList.prototype.forEach) {\n        NodeList.prototype.forEach = Array.prototype.forEach;\n    }\n\n    (function () {\n        if (typeof window.CustomEvent === 'function') return false; // If not IE\n\n        function CustomEvent(event, params) {\n            // eslint-disable-next-line no-param-reassign\n            params = params || { bubbles: false, cancelable: false, detail: undefined };\n            var evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        }\n\n        CustomEvent.prototype = window.Event.prototype;\n\n        window.CustomEvent = CustomEvent;\n    }());\n\n    if ($cartPage) {\n        helper.initWathcherCartUpdate();\n    }\n\n    if ($addCreditCardForm) {\n        creditCardAccount.initAccountAddCreditCard();\n    }\n\n    if ($addGooglePayAccountForm) {\n        googlePayAccount.initAddGooglePayAccount();\n    }\n\n    document.addEventListener('DOMContentLoaded', function () {\n        minicartHelper.miniCartButton();\n    });\n\n    if ($minicartPopover) {\n        minicartHelper.observer.observe($minicartPopover, { childList: true });\n    }\n\n    helper.paymentMethodChangeHandle(document.querySelector('.payment-options[role=tablist] a.active[data-toggle=\"tab\"]'));\n\n    if ($cartPage.length) {\n        applepayHelper.initApplepayButton();\n    }\n\n    if ($paypalContent) {\n        paypalPayment.makePaypalPayment($continueButton);\n    }\n\n    if ($creditCardContent) {\n        creditCardFields.initCreditCardFields();\n        creditcardHelper.initCardListAndSaveFunctionality();\n\n        $('body').on('checkout:updateCheckoutView', creditCardFields.updateData);\n\n        creditCardFields.updateData();\n\n        if ($creditCardList) {\n            $creditCardList.addEventListener('change', function () {\n                creditcardPayment.doNotAllowSubmitForm();\n            });\n        }\n        $('body').on('braintree:3dSecure_content_shown', function () {\n            helper.continueButtonToggle(false);\n        });\n\n        $('body').on('braintree:3dSecure_content_removed', function () {\n            setTimeout(function () {\n                creditcardPayment.hide3DSecureContainer();\n            }, 2000);\n        });\n\n        $continueButton.addEventListener('click', function (event) {\n            if (!event.isTrusted) {\n                return;\n            }\n            if (helper.isNonceExist('Paypal')) {\n                paypalHelper.updatePayPalAppearance();\n            } else if (helper.isNonceExist('GooglePay')) {\n                googlepayHelper.removeSessionAccount();\n            }\n            creditcardPayment.makeCreditCardPayment(event);\n        });\n    }\n\n    if ($applepayContent) {\n        applepayHelper.applepayPayment($continueButton);\n    }\n\n    if ($venmoContent) {\n        venmoPayment.makeVenmoPayment($continueButton);\n    }\n\n    if ($googlepayContent || $googlepayOnCart) {\n        googlepayPayment.makeGooglepayPayment($continueButton);\n    }\n\n    if ($srcContent) {\n        braintreeSrc.initSrcButton($continueButton);\n    }\n\n    $('.payment-options[role=tablist] a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n        helper.paymentMethodChangeHandle(e.target);\n        const cardList = document.getElementById('braintreeCreditCardList');\n        const paypalList = document.getElementById('braintreePaypalAccountsList');\n        var changeEvent;\n\n        if (e.target.hash === '#creditcard-content' && cardList) {\n            if (typeof (Event) === 'function') {\n                changeEvent = new Event('changeEvent');\n                cardList.addEventListener('changeEvent', function () {\n                    'change';\n                }, false);\n            } else {\n                changeEvent = document.createEvent('Event');\n                changeEvent.initEvent('changeEvent', true, true);\n            }\n            cardList.dispatchEvent(changeEvent);\n        } else if (e.target.hash === '#paypal-content' && paypalList) {\n            if (typeof (Event) === 'function') {\n                changeEvent = new Event('changeEvent');\n                paypalList.addEventListener('changeEvent', function () {\n                    'change';\n                }, false);\n            } else {\n                changeEvent = document.createEvent('Event');\n                changeEvent.initEvent('changeEvent', true, true);\n            }\n            paypalList.dispatchEvent(changeEvent);\n        }\n    });\n\n    if ($summaryDetails) {\n        $summaryDetails.classList.add('braintree-payment-details');\n        $summaryDetails.classList.remove('payment-details');\n    }\n\n    $('body').on('checkout:updateCheckoutView', helper.updateCheckoutView);\n\n    if ((pageState && pageState === 'cart') &&\n        orderStage && orderStage.getAttribute('data-checkout-stage') === 'placeOrder') {\n        helper.updatePaymentMethodTab();\n        sessionStorage.removeItem('pageState');\n    }\n\n    if ($braintreePaypalNonce && $braintreePaypalNonce.value !== '') {\n        document.querySelector('.paypal-tab').click();\n    }\n\n    if ($braintreeGooglePayNonce && $braintreeGooglePayNonce.value !== '') {\n        document.querySelector('.googlepay-tab').click();\n    }\n\n    if ($staticPaypalButton) {\n        paypalSavedAccountHandler.paypalStaticPdpButtonHandler();\n        $staticPaypalButton.addEventListener('click', paypalSavedAccountHandler.staticImageHandler);\n    }\n\n    // My account page\n    if (document.querySelector('.add-paypal-account')) {\n        paypalAccount.initPayPalEvents();\n    }\n    if (document.querySelector('.add-venmo-account')) {\n        venmoAccount.initVenmoEvents();\n    }\n    if (document.querySelector('.creditCard-accounts')) {\n        helper.initCardEvents();\n    }\n\n    if (document.querySelector('.paypal-accounts')) {\n        document.querySelector('.paypal-accounts').onclick = function (e) {\n            helper.removeBtPayment(e);\n        };\n    }\n    if (document.querySelector('.venmo-accounts')) {\n        document.querySelector('.venmo-accounts').onclick = function (e) {\n            helper.removeBtPayment(e);\n        };\n    }\n};\n","'use strict';\n\nvar braintreeUtils = require('../braintreeUtils');\nvar creditCard = require('../braintreeCreditCard');\nvar helper = require('../helper');\n\nvar $continueButton = document.querySelector('button.submit-payment');\nvar $creditCardList = document.querySelector('#braintreeCreditCardList');\n\nfunction doNotAllowSubmitForm() {\n    helper.continueButtonToggle(false);\n    $continueButton.setAttribute('data-is-allow-submit-form', false);\n}\n\nfunction hide3DSecureContainer() {\n    document.querySelector('#braintreeCreditCardFieldsContainer').style.display = '';\n    document.querySelector('#braintreeSaveCardAndDefaultContainer').style.display = '';\n    document.querySelector('#braintree3DSecureContainer').style.display = 'none';\n    doNotAllowSubmitForm();\n}\n\nfunction allowSubmitForm(event) {\n    $continueButton.setAttribute('data-is-allow-submit-form', true);\n    event.target.click();\n}\n\nfunction isActiveCreditCardTab() {\n    return document\n        .querySelector('.payment-options[role=tablist] a[data-toggle=\"tab\"][href=\"#creditcard-content\"]')\n        .classList\n        .contains('active');\n}\n\nfunction makeCreditCardPayment(event) {\n    if (!isActiveCreditCardTab()) {\n        return;\n    }\n\n    if (JSON.parse($continueButton.getAttribute('data-is-allow-submit-form')) && creditCard.isFormValid()) {\n        return;\n    }\n\n    if ($creditCardList) {\n        var is3dSecureEnabled = JSON.parse(document.querySelector('.js_braintree_creditCardFields').getAttribute('data-braintree-config')).is3dSecureEnabled;\n        if ($creditCardList && $creditCardList.value !== 'newcard') {\n            if (!is3dSecureEnabled) {\n                allowSubmitForm(event);\n                return;\n            }\n\n            var selectedCard = braintreeUtils.getSelectedData($creditCardList);\n            var getNonceUrl = $creditCardList.getAttribute('data-get-payment-nonce-url');\n            var cardUUID = selectedCard['data-id'].value;\n            $.get(`${getNonceUrl}?id=${cardUUID}`, function (responce) {\n                creditCard.startTokenize(function (result) {\n                    if (!result.error) {\n                        allowSubmitForm(event);\n                    }\n                }, responce);\n            });\n            event.preventDefault();\n            event.stopPropagation();\n            return;\n        }\n    }\n    creditCard.startTokenize(function (result) {\n        if (!result.error) allowSubmitForm(event);\n    });\n    event.preventDefault();\n    event.stopPropagation();\n}\n\nmodule.exports = {\n    doNotAllowSubmitForm,\n    hide3DSecureContainer,\n    makeCreditCardPayment\n};\n","'use strict';\nvar creditCard = require('../braintreeCreditCard');\nvar creditCardFields = require('./creditcardFields');\n\nfunction submitCreditCardForm() {\n    $('.js_braintree_addCreditCardForm').submit(function () {\n        var addCreditCardForm = $(this);\n        creditCard.startTokenize(function (result) {\n            if (result.error) return;\n            addCreditCardForm.spinner().start();\n            $.ajax({\n                url: addCreditCardForm.attr('action'),\n                type: 'post',\n                dataType: 'json',\n                data: addCreditCardForm.serialize(),\n                success: function (data) {\n                    addCreditCardForm.spinner().stop();\n                    if (!data.success) {\n                        document.querySelector('#braintreeCreditCardErrorContainer').textContent = data.error;\n                    } else {\n                        location.href = data.redirectUrl;\n                    }\n                },\n                error: function (err) {\n                    if (err.responseJSON.redirectUrl) {\n                        window.location.href = err.responseJSON.redirectUrl;\n                    }\n                    addCreditCardForm.spinner().stop();\n                }\n            });\n        });\n        return false;\n    });\n}\n\nfunction initAccountAddCreditCard() {\n    creditCardFields.initCreditCardFields();\n    submitCreditCardForm();\n}\n\nmodule.exports = {\n    initAccountAddCreditCard\n};\n","'use strict';\n\nvar paypalHelper = require('./paypalHelper');\nvar payPal = require('../braintreePaypal');\nvar braintreeUtils = require('../braintreeUtils');\nvar paypalSavedAccountHandler = require('./paypalSavedAccountHandler');\n\nvar $paypalMinicartButton;\n\nfunction miniCartButton() {\n    document.querySelectorAll('.js_braintree_paypal_cart_button').forEach(function (el) {\n        var $btn = el;\n        if (JSON.parse($btn.getAttribute('data-is-inited'))) {\n            return;\n        }\n        var config = JSON.parse($btn.getAttribute('data-braintree-config'));\n        if (typeof config !== 'object' || config === null) {\n            // eslint-disable-next-line no-console\n            console.error(el, 'not valid data-braintree-config');\n            return;\n        }\n        $paypalMinicartButton = document.querySelector('.paypalMinicartButton');\n        if ($paypalMinicartButton && config.options.amount === 0) {\n            $paypalMinicartButton.style.display = 'none';\n        }\n        config.paypalConfig = config.paypalConfig || {};\n\n        config.onTokenizePayment = function (payload, btnInstance) {\n            var that = btnInstance;\n            var params = btnInstance.params;\n            var postData = {\n                braintreePaypalNonce: payload.nonce\n            };\n\n            if (params.riskData) {\n                postData.braintreePaypalRiskData = params.riskData;\n            }\n\n            if (payload.details) {\n                var details = payload.details;\n                if (!details.billingAddress) {\n                    that.er.show('Merchant PayPal account does not support the Billing Address retrieving. Contact PayPal for details on eligibility and enabling this feature.');\n\n                    return;\n                }\n                var billingAddressData = paypalHelper.createBillingAddressData(details.billingAddress, details);\n                postData.braintreePaypalBillingAddress = billingAddressData;\n                var shippingAddressData = details.shippingAddress ? paypalHelper.createShippingAddressData(details.shippingAddress, details) : '{}';\n                postData.braintreePaypalShippingAddress = shippingAddressData;\n            }\n\n            if (params.options.flow === 'vault' || (params.options.flow === 'checkout' && params.options.requestBillingAgreement)) {\n                postData.braintreeSavePaypalAccount = 'true';\n                postData.braintreePaypalAccountMakeDefault = 'true';\n            }\n\n            braintreeUtils.postData(params.paypalHandle, postData);\n        };\n\n        var paypalIns = payPal.init(config, $btn);\n\n        function updateCartPaypalAmount() { // eslint-disable-line require-jsdoc\n            paypalIns.loader.show();\n            $.ajax({\n                url: config.getOrderInfoUrl,\n                type: 'get',\n                dataType: 'json',\n                success: function (data) {\n                    paypalIns.loader.hide();\n                    paypalIns.updateAmount(data.amount);\n                },\n                error: function () {\n                    window.location.reload();\n                }\n            });\n        }\n        $('body').on('cart:update', function () {\n            $paypalMinicartButton = document.querySelector('.paypalMinicartButton');\n            var $totalPrice = document.querySelector('.sub-total');\n            if ($paypalMinicartButton && $totalPrice) {\n                var isZeroAmount = $totalPrice.innerHTML.substring(1) === '0.00';\n                $paypalMinicartButton.style.display = isZeroAmount ? 'none' : '';\n            }\n        });\n\n        $('body').on('braintree:updateCartTotals', updateCartPaypalAmount);\n        $btn.setAttribute('data-is-inited', true);\n    });\n}\n\nvar observer = new MutationObserver(function (mutations) {\n    mutations.forEach(function (mutation) {\n        if (mutation.addedNodes.length < 2) {\n            return;\n        }\n        miniCartButton();\n        var $staticPaypalButton = document.querySelector('.braintree-static-paypal-button');\n        if ($staticPaypalButton) {\n            $staticPaypalButton.addEventListener('click', paypalSavedAccountHandler.staticImageHandler);\n        }\n    });\n});\n\nmodule.exports = {\n    miniCartButton,\n    observer\n};\n","'use strict';\nvar payPal = require('../braintreePaypal');\nvar paypalHelper = require('./paypalHelper');\nvar helper = require('../helper');\nvar loaderInstance = require('../loaderHelper');\nvar accountsLoader;\n\nfunction initAddPaypalAccount() {\n    var $btn = document.querySelector('.js_braintree_accountPaypalButton');\n    var $paypalErrorContainer = document.querySelector('#paypalAccountErrorContainer');\n    var $paypalLoader = document.querySelector('#braintreePayPalAccLoader');\n\n    if (JSON.parse($btn.getAttribute('data-is-inited'))) {\n        return;\n    }\n    var config = JSON.parse($btn.getAttribute('data-braintree-config'));\n    if (typeof config !== 'object' || config === null) {\n        // eslint-disable-next-line no-console\n        console.error($btn, 'not valid data-braintree-config');\n        return;\n    }\n\n    config.$loaderContainer = $paypalLoader;\n    config.$errorContainer = $paypalErrorContainer;\n    config.onTokenizePayment = function (data) {\n        let accountPaypalButton = document.querySelector('.js_braintree_accountPaypalButton');\n        let paypalAddAccountHandler = accountPaypalButton.getAttribute('data-paypal-add-account-handler');\n        let paypalAccountFormFields = accountPaypalButton.getAttribute('data-paypal-account-form-fields');\n        let paypalAccountFormData = helper.createPaymentFormData(paypalAccountFormFields, {\n            nonce: data.nonce,\n            email: data.details.email,\n            makedefault: document.querySelector('#makeDefaultPaypalAccount').checked\n        });\n        let csrfToken = document.querySelector('.js_braintree_accountPaypalButton_wrapper #csrf_token');\n        paypalAccountFormData.append(csrfToken.name, csrfToken.value);\n\n        let $loaderContainter = document.querySelector('#paypalAccountBtLoader');\n        accountsLoader = loaderInstance($loaderContainter);\n        accountsLoader.show();\n        return $.ajax({\n            type: 'POST',\n            url: paypalAddAccountHandler,\n            data: paypalAccountFormData,\n            contentType: false,\n            processData: false\n        })\n            .then((paymentData) => {\n                paypalHelper.hidePaypalAccountBtn();\n                $paypalLoader.style.display = 'none';\n                $paypalErrorContainer.textContent = '';\n                $paypalErrorContainer.style.display = 'none';\n\n                $.get(paymentData.renderAccountsUrl)\n                    .then((tplData => {\n                        accountsLoader.hide();\n                        document.querySelector('.paypal-accounts').innerHTML = tplData;\n                        document.querySelectorAll('.paypal-accounts .remove-bt-payment').forEach(function (el) {\n                            el.addEventListener('click', helper.removeBtPayment);\n                        });\n                    }));\n            })\n            .fail(({ responseJSON }) => {\n                accountsLoader.hide();\n                $paypalLoader.style.display = 'none';\n                $paypalErrorContainer.style.display = 'block';\n                $paypalErrorContainer.textContent = responseJSON.error;\n            });\n    };\n\n    payPal.init(config, $btn);\n    $btn.setAttribute('data-is-inited', true);\n}\n\nfunction initPayPalEvents() {\n    document.querySelector('.add-paypal-account').addEventListener('click', function () {\n        paypalHelper.showPaypalAccountBtn();\n        initAddPaypalAccount();\n    });\n}\n\nmodule.exports = {\n    initPayPalEvents,\n    initAddPaypalAccount\n};\n","'use strict';\nvar paypalHelper = require('./paypalHelper');\nvar helper = require('../helper');\nvar payPal = require('../braintreePaypal');\nvar googlePayHelper = require('../googlepay/googlepayHelper');\n\nvar $paypalContent = document.querySelector('.js_braintree_paypalContent');\nvar $paypalButton = document.querySelector('.js_braintree_paypal_billing_button');\nvar $braintreePaypalAccountsList = document.querySelector('#braintreePaypalAccountsList');\nvar $braintreePaypalBillingAddressInput = document.querySelector('input[name=braintreePaypalBillingAddress]');\nvar $braintreePaypalShippingAddressInput = document.querySelector('input[name=braintreePaypalShippingAddress]');\nvar $braintreePaypalNonceInput = document.querySelector('input[name=braintreePaypalNonce]');\nvar $braintreePaypalEmail = document.querySelector('#braintreePaypalEmail');\nvar $braintreePaypalNonce = document.querySelector('#braintreePaypalNonce');\n\nfunction makePaypalPayment(continueButton) {\n    var config = JSON.parse($paypalButton.getAttribute('data-braintree-config'));\n    var isSessionAccount = paypalHelper.getSessionAccountOption();\n    var isSameSessionAccount = paypalHelper.getOptionByEmail();\n\n    if (typeof config !== 'object' || config === null) {\n        // eslint-disable-next-line no-console\n        console.error($paypalButton, 'not valid data-braintree-config');\n    }\n\n    function hideShowButtons() {\n        if ($braintreePaypalAccountsList.value === 'newaccount') {\n            $paypalContent.setAttribute('data-paypal-is-hide-continue-button', true);\n            continueButton.style.display = 'none';\n            $paypalButton.style.display = '';\n        } else {\n            $paypalContent.setAttribute('data-paypal-is-hide-continue-button', false);\n            continueButton.style.display = '';\n            $paypalButton.style.display = 'none';\n        }\n    }\n\n    if ($braintreePaypalAccountsList) {\n        $braintreePaypalAccountsList.addEventListener('change', function () {\n            hideShowButtons();\n        });\n    }\n\n    // Getting same email option as session email, if any found\n    if (JSON.parse($braintreePaypalAccountsList.dataset.customerAuthenticated) && isSessionAccount) {\n        if (isSameSessionAccount) {\n            isSameSessionAccount.style.display = 'none';\n            if (isSessionAccount.classList.contains('used-paypal-account-hide')) {\n                isSessionAccount.classList.add('used-paypal-account');\n                isSessionAccount.classList.remove('used-paypal-account-hide');\n            }\n        }\n\n        paypalHelper.setSessionAccountOptionDefault();\n    }\n\n    paypalHelper.initAccountListAndSaveFunctionality();\n\n    config.onTokenizePayment = function (data) {\n        if (helper.isNonceExist('GooglePay')) {\n            googlePayHelper.removeSessionAccount();\n        }\n        if ($braintreePaypalNonceInput) {\n            $braintreePaypalNonceInput.value = data.nonce;\n        }\n        $braintreePaypalNonce.value = data.nonce;\n        document.querySelector('#braintreePaypalAccount').setAttribute('data-session-account', 'true');\n\n        if (data.details) {\n            var details = data.details;\n            $braintreePaypalEmail.value = data.details.email;\n            document.querySelector('#braintreePaypalAccount').value = data.details.email;\n            document.querySelector('#braintreePaypalAccount').text = data.details.email;\n            helper.continueButtonToggle(false);\n\n            if (details.billingAddress) {\n                var billingAddressData = paypalHelper.createBillingAddressData(details.billingAddress, details);\n                if ($braintreePaypalBillingAddressInput) {\n                    $braintreePaypalBillingAddressInput.value = billingAddressData;\n                }\n            }\n            if (details.shippingAddress) {\n                var shippingAddressData = paypalHelper.createShippingAddressData(details.shippingAddress, details);\n                if ($braintreePaypalShippingAddressInput) {\n                    $braintreePaypalShippingAddressInput.value = shippingAddressData;\n                }\n            }\n            if ($braintreePaypalAccountsList && $braintreePaypalAccountsList.value === 'newaccount') {\n                document.querySelector('.js_braintree_paypal_billing_button').style.display = 'none';\n                var paypalAccount = document.querySelector('.form-group.braintree_used_paypal_account');\n                var sessionAccount = document.querySelector('#braintreePaypalAccount');\n                if (!paypalAccount.classList.contains('used-paypal-account')) {\n                    paypalAccount.classList.remove('used-paypal-account-hide');\n                    paypalAccount.classList.add('used-paypal-account');\n                    sessionAccount.classList.remove('used-paypal-account-hide');\n                    sessionAccount.classList.add('used-paypal-account');\n                } else {\n                    sessionAccount.classList.remove('used-paypal-account-hide');\n                    sessionAccount.classList.add('used-paypal-account');\n                }\n            }\n        }\n\n        var newPPAccount = document.getElementById('newPPAccount');\n        if (newPPAccount.selected) {\n            newPPAccount.removeAttribute('selected');\n            document.querySelector('#braintreePaypalAccount').selected = true;\n        }\n\n        // Getting same email option as session email, if any found\n        if (JSON.parse($braintreePaypalAccountsList.dataset.customerAuthenticated) && paypalHelper.getSessionAccountOption()) {\n            isSameSessionAccount = paypalHelper.getOptionByEmail();\n            paypalHelper.setSessionAccountOptionDefault();\n\n            if (isSameSessionAccount) {\n                isSameSessionAccount.style.display = 'none';\n                document.getElementById('braintreeSavePaypalAccount').value = false;\n                document.getElementById('braintreePaypalAccountMakeDefault').value = false;\n                document.querySelector('#braintreePaypalAccountMakeDefaultContainer').style.display = 'none';\n                document.querySelector('#braintreeSavePaypalAccountContainer').style.display = 'none';\n            } else {\n                [].forEach.call(document.querySelector('#braintreePaypalAccountsList'), function (el) {\n                    if (el.style.display === 'none') el.style.display = 'block';\n                });\n            }\n        }\n\n        paypalHelper.showPayPalAccount(data.details.email, data.nonce);\n        continueButton.click();\n    };\n\n    config.paypalConfig = config.paypalConfig || {};\n    config.paypalConfig.validate = function (validateActions) {\n        paypalHelper.formValidationConrol(validateActions, true);\n    };\n\n    var paypalIns = payPal.init(config, $paypalButton);\n    if (document.querySelector('.braintree_used_paypal_account').classList.contains('used-paypal-account')) {\n        paypalHelper.showPayPalAccount(document.querySelector('#braintreePaypalEmail').value);\n    }\n    function updateAmountAndShippingData() { // eslint-disable-line require-jsdoc\n        paypalIns.loader.show();\n        $.ajax({\n            url: config.getOrderInfoUrl,\n            type: 'get',\n            dataType: 'json',\n            success: function (data) {\n                var $paypalAddress = document.querySelector('input[name=braintreePaypalShippingAddress]') !== '';\n                paypalIns.loader.hide();\n                paypalIns.updateAmount(data.amount);\n                paypalIns.updateShippingAddress(data.shippingAddress);\n                if ($paypalAddress.value) {\n                    var newPayPalAddress = $.extend({}, JSON.parse($paypalAddress.value), data.shippingAddress);\n                    $paypalAddress.value = JSON.stringify(newPayPalAddress);\n                }\n            },\n            error: function () {\n                window.location.reload();\n            }\n        });\n    }\n\n    $('body').on('checkout:updateCheckoutView', updateAmountAndShippingData);\n    updateAmountAndShippingData();\n}\n\nmodule.exports = {\n    makePaypalPayment\n};\n","'use strict';\nvar braintreeLocal = require('../braintreeLocal');\nvar $lpmButton = document.querySelectorAll('.lpmButton');\n\n$lpmButton.forEach(function (el) {\n    var $btn = el;\n    var config = JSON.parse($btn.getAttribute('data-braintree-config'));\n    var localIns = braintreeLocal.init(config, $btn);\n    localIns.createLocalPayment();\n});\n","'use strict';\nvar braintreeVenmo = require('../braintreeVenmo');\nvar venmoHelper = require('./venmoHelper');\nvar helper = require('../helper');\nvar loaderInstance = require('../loaderHelper');\nvar accountsLoader;\n\nfunction initAddVenmoAccount() {\n    var $btn = document.querySelector('.js_braintree_accountVenmoButton');\n    var $venmoErrorContainer = document.querySelector('#venmoAccountErrorContainer');\n    var $venmoLoader = document.querySelector('#braintreeVenmoAccLoader');\n    var isBrowserSupported = localStorage.getItem('venmoBrowserSupported');\n\n    if (JSON.parse($btn.getAttribute('data-is-inited'))) {\n        return;\n    }\n    var config = JSON.parse($btn.getAttribute('data-braintree-config'));\n\n    if (typeof config !== 'object' || config === null) {\n        // eslint-disable-next-line no-console\n        console.error($btn, 'not valid data-braintree-config');\n        return;\n    }\n    if (isBrowserSupported !== null & isBrowserSupported === 'false') {\n        venmoHelper.showVenmoAccountError();\n        $venmoErrorContainer.textContent = config.messages.VENMO_BROWSER_NOT_SUPPORTED;\n        return;\n    }\n\n    config.$loaderContainer = $venmoLoader;\n    config.$errorContainer = $venmoErrorContainer;\n    config.deviceNotSupportVenmo = function () {\n        venmoHelper.showVenmoAccountError();\n        $venmoErrorContainer.textContent = config.messages.VENMO_BROWSER_NOT_SUPPORTED;\n    };\n    config.onTokenizePayment = function (data) {\n        localStorage.removeItem('venmoBrowserSupported');\n        let accountVenmoButton = document.querySelector('.js_braintree_accountVenmoButton');\n        let venmoAddAccountHandler = accountVenmoButton.getAttribute('data-venmo-add-account-handler');\n        let venmoAccountFormFields = accountVenmoButton.getAttribute('data-venmo-account-form-fields');\n        let venmoAccountFormData = helper.createPaymentFormData(venmoAccountFormFields, {\n            nonce: data.nonce,\n            makedefault: document.querySelector('#makeDefaultVenmoAccount').checked\n        });\n        let csrfToken = document.querySelector('.js_braintree_accountVenmoButton_wrapper #csrf_token');\n        venmoAccountFormData.append(csrfToken.name, csrfToken.value);\n\n        let $loaderContainter = document.querySelector('#venmoAccountBtLoader');\n        accountsLoader = loaderInstance($loaderContainter);\n        accountsLoader.show();\n        return $.ajax({\n            type: 'POST',\n            url: venmoAddAccountHandler,\n            data: venmoAccountFormData,\n            contentType: false,\n            processData: false\n        })\n            .then((paymentData) => {\n                venmoHelper.hideVenmoAccountBtn();\n                $venmoLoader.style.display = 'none';\n                $venmoErrorContainer.textContent = '';\n                $venmoErrorContainer.style.display = 'none';\n\n                $.get(paymentData.renderAccountsUrl)\n                    .then((tplData => {\n                        accountsLoader.hide();\n                        document.querySelector('.venmo-accounts').innerHTML = tplData;\n                        document.querySelectorAll('.venmo-accounts .remove-bt-payment').forEach(function (el) {\n                            el.addEventListener('click', helper.removeBtPayment);\n                        });\n                    }));\n            })\n            .fail(({ responseJSON }) => {\n                accountsLoader.hide();\n                $venmoLoader.style.display = 'none';\n                $venmoErrorContainer.style.display = 'block';\n                $venmoErrorContainer.textContent = responseJSON.error;\n            });\n    };\n\n    braintreeVenmo.init(config, $btn);\n    $btn.setAttribute('isInited', true);\n}\n\nfunction initVenmoEvents() {\n    let $addVenmoAccountBtn = document.querySelector('.add-venmo-account');\n    $addVenmoAccountBtn.addEventListener('click', function () {\n        venmoHelper.showVenmoAccountBtn();\n        initAddVenmoAccount();\n    });\n\n    // Initiate click and if not supported -> init showVenmoError function (hide all except error msg)\n    $addVenmoAccountBtn.click();\n    if (document.querySelector('.js_braintree_accountVenmoButton_wrapper .error').style.display !== 'none') {\n        document.querySelector('.add-venmo-account').style.display = 'none';\n    }\n}\n\nmodule.exports = {\n    initVenmoEvents,\n    initAddVenmoAccount\n};\n","'use strict';\nvar braintreeVenmo = require('../braintreeVenmo');\nvar venmoHelper = require('./venmoHelper');\nvar loaderInstance = require('../loaderHelper');\n\nvar $venmoButton = document.querySelector('.js_braintree_venmo_button');\nvar $btVermoAccountsList = document.querySelector('#braintreeVenmoAccountsList');\nvar $braintreeVenmoNonce = document.querySelector('#braintreeVenmoNonce');\nvar $braintreeVenmoUserId = document.querySelector('#braintreeVenmoUserId');\nvar $submitShippingBtn = document.querySelector('.button, .submit-shipping');\nvar $contactEmail = document.querySelector('.contact-info-block [name=dwfrm_billing_contactInfoFields_email]');\nvar $hideVenmoButton = document.querySelector('.braintree-venmo-pay-button');\nvar $billingForm = document.querySelector('.card-body [id=dwfrm_billing]');\nvar $venmoContent = document.querySelector('.js_braintree_venmoContent');\n\nfunction makeVenmoPayment(continueButton) {\n    var config = JSON.parse($venmoButton.getAttribute('data-braintree-config'));\n    var isBrowserSupported = localStorage.getItem('venmoBrowserSupported');\n\n    if (typeof config !== 'object' || config === null) {\n        // eslint-disable-next-line no-console\n        console.error($venmoButton, 'not valid data-braintree-config');\n    }\n    if (isBrowserSupported !== null & isBrowserSupported === 'false') {\n        venmoHelper.hideVenmoButton();\n        return false;\n    }\n    if (JSON.parse($hideVenmoButton.getAttribute('data-is-hide-venmo-button')) && $btVermoAccountsList !== 'newaccount') {\n        $venmoButton.style.display = 'none';\n    }\n\n    venmoHelper.initAccountListAndSaveFunctionality();\n\n    if ($btVermoAccountsList) {\n        $btVermoAccountsList.addEventListener('change', function () {\n            venmoHelper.hideShowButtons();\n        });\n        venmoHelper.hideShowButtons();\n    }\n\n    config.onClick = function () {\n        if ($billingForm.checkValidity()) {\n            /**\n                * Setting current customer Billing address to form\n                *  For the case when SFCC redirects customer from payment stage to shipping stage\n                *  after successful Venmo app response\n            */\n            document.querySelector('#braintreeVenmoBilling').value = JSON.stringify(require('../helper').getBillingAddressFormValues());\n\n            return true;\n        }\n        $contactEmail.classList.add('is-invalid');\n        return false;\n    };\n    config.deviceNotSupportVenmo = function () {\n        venmoHelper.hideVenmoButton();\n    };\n    config.onTokenizePayment = function (data) {\n        var $loaderContainer = venmoHelper.createLoaderContainter(document.querySelector('.page'));\n        loaderInstance($loaderContainer).show();\n        localStorage.removeItem('venmoBrowserSupported');\n\n        $braintreeVenmoNonce.value = data.nonce;\n        $braintreeVenmoUserId.value = data.details.username;\n\n        if (window.history.state !== 'shipping') {\n            continueButton.click();\n            document.querySelector('.venmo-braintree-loader').remove();\n            return true;\n        }\n\n        venmoHelper.updateBillingAddressFormValues(JSON.parse(document.querySelector('#braintreeVenmoBilling').value));\n\n        // move to stage payment\n        $submitShippingBtn.click();\n        $venmoButton.setAttribute('data-is-valid-stage', true);\n        $venmoButton.setAttribute('data-user-email', $contactEmail.value);\n        document.querySelector('.venmo-braintree-loader').remove();\n    };\n\n    /**\n        *  Init Venmo app with correct URL fragment (hash) to prevent Browser from opening the URL in a new tab.\n        *  Braintree JS SDK is preserving the URL in its entirety and modifies the URL fragment (hash)\n        *  to send back the results from Venmo (e.g. nonce, error message, etc.)\n        *\n    */\n    var hashChange = new MutationObserver(function (mutations) {\n        var correlationId = document.querySelector('#braintreeVenmoDeviceData').value || null;\n        var mutation = mutations.find(function (element) {\n            return element.attributeName === 'data-checkout-stage' && element.target.dataset.checkoutStage === 'payment';\n        });\n\n        if (!mutation) {\n            return false;\n        }\n        if (!correlationId) {\n            braintreeVenmo.init(config, $venmoButton);\n            return true;\n        }\n\n        if ($braintreeVenmoNonce.value && JSON.parse($venmoButton.getAttribute('data-is-valid-stage'))) {\n            $contactEmail.value = $venmoButton.getAttribute('data-user-email') || '';\n            $venmoButton.setAttribute('data-is-valid-stage', false);\n            continueButton.click();\n\n            return true;\n        }\n        if ($venmoContent.classList.contains('active') && mutation.oldValue === 'placeOrder') {\n            venmoHelper.showVenmoAccount();\n            $venmoContent.setAttribute('data-paypal-is-hide-continue-button', false);\n            $hideVenmoButton.setAttribute('data-is-hide-venmo-button', true);\n        }\n    });\n\n    hashChange.observe(document.querySelector('#checkout-main'), { attributeOldValue: true });\n}\n\nmodule.exports = {\n    makeVenmoPayment\n};\n","'use strict';\n\nvar googlepay = require('../braintreeGooglepay');\nvar loaderInstance = require('../loaderHelper');\n\nfunction submitAddGooglePayAccountForm() {\n    $('.js_braintree_addGooglePayAccountForm').submit(function () {\n        var $form = $(this);\n        var $btFormErrorContainer = document.querySelector('#braintreeFormErrorContainer');\n        $form.spinner().start();\n\n        $.post($form.attr('action'), $form.serialize())\n            .done(function (data) {\n                $form.spinner().stop();\n                if (!data.success) {\n                    $btFormErrorContainer.textContent = data.error;\n                } else {\n                    location.href = data.redirectUrl;\n                }\n            })\n            .fail(function (err) {\n                if (err.responseJSON.redirectUrl) {\n                    window.location.href = err.responseJSON.redirectUrl;\n                }\n                $form.spinner().stop();\n            });\n        return false;\n    });\n}\n\nfunction initAddGooglePayAccount() {\n    var $btn = document.querySelector('.js_braintree_accountgooglepay_button');\n    var $googlepayNonce = document.querySelector('#braintreeGooglePayNonce');\n    var $btGooglePayLoader = document.querySelector('.braintreeGooglepayLoader');\n    var googlepayIns;\n    var loader = loaderInstance($btGooglePayLoader);\n\n    if (JSON.parse($btn.getAttribute('data-is-inited'))) {\n        return;\n    }\n    var config = JSON.parse($btn.getAttribute('data-braintree-config'));\n\n    if (typeof config !== 'object' || config === null) {\n        // eslint-disable-next-line no-console\n        console.error($btn, 'not valid data-braintree-config');\n        return;\n    }\n    loader.show();\n\n    config.onTokenizePayment = function (data, result) {\n        var $btFormErrorContainer = document.querySelector('#braintreeFormErrorContainer');\n        $btFormErrorContainer.textContent = '';\n\n        if (result.type === 'PayPalAccount') {\n            $btFormErrorContainer.textContent = config.messages.saving_paypal_account_error;\n\n            return;\n        }\n\n        $googlepayNonce.value = result.nonce;\n\n        document.querySelector('.braintreeGooglePayBtn').click();\n    };\n    googlepayIns = googlepay.init(config, $btn);\n    googlepayIns.createGooglepay();\n    $btn.setAttribute('data-is-inited', true);\n    submitAddGooglePayAccountForm();\n}\n\nmodule.exports = {\n    initAddGooglePayAccount\n};\n/* eslint no-use-before-define: 2 */  // --> ON\n","'use strict';\nvar googlepay = require('../braintreeGooglepay');\nvar googlepayHelper = require('./googlepayHelper');\n\nvar $googlepayButton = document.querySelector('.js_braintree_googlepay_button');\nvar $btGooglepayAccountsList = document.querySelector('#braintreeGooglepayAccountsList');\nvar $googlepayOnCart = document.querySelector('.braintree-cart-google-button');\nvar $googlepayNonce = document.querySelector('#braintreeGooglePayNonce');\nvar $googlepayCardDescription = document.querySelector('#braintreeGooglePayCardDescription');\nvar $braintreeGooglepayBillingAddressInput = document.querySelector('input[name=braintreeGooglePayBillingAddress]');\nvar $braintreeGooglepayPaymentType = document.querySelector('#braintreeGooglepayPaymentType');\n\nfunction makeGooglepayPayment(continueButton) {\n    var googlepayIns;\n    var config = JSON.parse($googlepayButton.getAttribute('data-braintree-config'));\n    if (typeof config !== 'object' || config === null) {\n        // eslint-disable-next-line no-console\n        console.error($googlepayButton, 'not valid data-braintree-config');\n    }\n\n    if ($btGooglepayAccountsList) {\n        $btGooglepayAccountsList.addEventListener('change', function () {\n            googlepayHelper.hideShowButtons();\n        });\n        googlepayHelper.hideShowButtons();\n\n        if ($googlepayCardDescription.value === 'GooglePay') {\n            $googlepayCardDescription.value = $btGooglepayAccountsList.selectedOptions[0].label;\n        }\n    }\n\n    config.onTokenizePayment = function (data, result) {\n        var billingAddressData;\n        var shippingAddressData;\n        var newPPAccount = document.getElementById('newGPAccount');\n        if (require('../helper').isNonceExist('Paypal')) {\n            require('../paypal/paypalHelper').updatePayPalAppearance();\n        }\n\n        if (data) {\n            billingAddressData = googlepayHelper.createGooglepayBillingAddressData(data);\n\n            if ($googlepayOnCart) {\n                shippingAddressData = googlepayHelper.createGooglepayShippingAddressData(data.shippingAddress);\n\n                $.ajax({\n                    url: config.returnFromCartUrl,\n                    type: 'POST',\n                    contentType: 'application/json',\n                    data: JSON.stringify({\n                        nonce: result.nonce,\n                        paymentCardDescription: result.details.cardType + ' ' + result.details.lastFour,\n                        saveGpAccount: result.type === 'AndroidPayCard',\n                        billingAddress: billingAddressData,\n                        shippingAddress: shippingAddressData || {},\n                        paymentType: result.type\n                    }),\n                    success: function (res) {\n                        sessionStorage.setItem('pageState', 'cart');\n                        googlepayIns.loader.hide();\n                        window.location.href = res.redirectUrl;\n                    },\n                    error: function () {\n                        googlepayIns.loader.hide();\n                    }\n                });\n                return;\n            }\n\n            $braintreeGooglepayBillingAddressInput.value = billingAddressData;\n        }\n\n        $googlepayNonce.value = result.nonce;\n        $googlepayCardDescription.value = result.details.cardType + ' ' + result.details.lastFour;\n        $braintreeGooglepayPaymentType.value = result.type;\n\n        // Selecting Google Pay Session Account\n        document.querySelector('#sessionGPAccount').text = $googlepayCardDescription.value;\n        newPPAccount.removeAttribute('selected');\n        document.querySelector('#sessionGPAccount').selected = true;\n        document.querySelector('#sessionGPAccount').setAttribute('data-session-account', 'true');\n\n        googlepayHelper.showGooglepayAccount();\n        continueButton.click();\n    };\n\n    googlepayIns = googlepay.init(config, $googlepayButton);\n    googlepayIns.createGooglepay();\n\n    function googlepayUpdateAmount() { // eslint-disable-line require-jsdoc\n        googlepayIns.loader.show();\n        $.ajax({\n            url: config.getOrderInfoUrl,\n            type: 'get',\n            dataType: 'json',\n            success: function (data) {\n                googlepayIns.loader.hide();\n                googlepayIns.updateAmount(data.amount);\n            },\n            error: function () {\n                window.location.reload();\n            }\n        });\n    }\n\n    $('body').on('checkout:updateCheckoutView', googlepayUpdateAmount);\n    $('body').on('braintree:updateCartTotals', googlepayUpdateAmount);\n    googlepayUpdateAmount();\n}\n\nmodule.exports = {\n    makeGooglepayPayment\n};\n","'use strict';\nvar src = require('../braintreeSrc');\nvar srcHelper = require('./srcHelper');\n\nvar $srcButton = document.querySelector('.js_braintree_src_button');\nvar $srcNonce = document.querySelector('#braintreeSrcNonce');\nvar $srcCardDescription = document.querySelector('#braintreeSrcCardDescription');\nvar $srcBillingAddress = document.querySelector('#braintreeSrcBillingAddress');\nvar $srcAccountList = document.querySelector('#braintreeSrcAccountsList');\n\nfunction initSrcButton(continueButton) {\n    var srcIns;\n    var config = JSON.parse($srcButton.getAttribute('data-braintree-config'));\n    if (typeof config !== 'object' || config === null) {\n        // eslint-disable-next-line no-console\n        console.error($srcButton, 'not valid data-braintree-config');\n    }\n\n    config.onTokenizePayment = function (data) {\n        var cardDescrition = data.details.cardType + ' ' + data.description;\n\n        $srcNonce.value = data.nonce;\n        $srcCardDescription.value = cardDescrition;\n        $srcBillingAddress.value = data.billingAddressString;\n\n        srcHelper.setSessionAccountData(cardDescrition);\n\n        continueButton.click();\n        return;\n    };\n\n    srcIns = src.init(config, $srcButton);\n    srcIns.loadSrcButton();\n\n    srcHelper.initSessionAccountDropdownState();\n\n    $srcAccountList.addEventListener('change', srcHelper.updateSessionAccountDropdown);\n    $('body').on('checkout:updateCheckoutView', srcHelper.srcUpdateAmount.bind(null, srcIns, config));\n    $('body').on('braintree:updateCartTotals', srcHelper.srcUpdateAmount.bind(null, srcIns, config));\n    srcHelper.srcUpdateAmount(srcIns, config);\n}\n\nmodule.exports = {\n    initSrcButton\n};\n","/* eslint-disable no-undef */\n'use strict';\nvar braintreeUtils = require('./braintreeUtils');\nvar loaderInstance = require('./loaderHelper');\nvar bu = braintreeUtils;\nvar loader;\n\nfunction Constructor(initParams, $btn) {\n    this.$btn = $btn;\n    var $errorContainer = document.createElement('div');\n    $errorContainer.className = 'error';\n    var $loaderContainter = document.querySelector('.braintreeSrcLoader');\n    loader = loaderInstance($loaderContainter);\n    this.loader = loader;\n    $btn.parentNode.insertBefore($errorContainer, $btn.nextSibling);\n    this.params = initParams;\n    this.er = bu.createErrorInstance($errorContainer);\n}\n\nConstructor.prototype.loadSrcButton = function () {\n    var that = this;\n    var params = that.params;\n\n    // TODO Fix loader.\n    loader.show();\n    braintree.client.create({\n        authorization: params.clientToken\n    }, function (clientErr, clientInstance) {\n        if (clientErr) {\n            that.er.show(clientErr);\n            loader.hide();\n            return;\n        }\n        // Create a Visa Checkout component.\n        braintree.visaCheckout.create({\n            client: clientInstance\n        }, function (srcPaymentErr, visaCheckoutInstance) {\n            if (srcPaymentErr) {\n                that.er.show(srcPaymentErr);\n                loader.hide();\n                return;\n            }\n            var baseInitOptions = {\n                paymentRequest: {\n                    currencyCode: 'USD',\n                    subtotal: params.options.amount\n                }\n            };\n\n            var initOptions = visaCheckoutInstance.createInitOptions(baseInitOptions);\n            initOptions.settings.shipping = {\n                collectShipping: params.options.isShippingAddressRequired\n            };\n            V.init(initOptions);\n            V.on('payment.success', function (payment) {\n                visaCheckoutInstance.tokenize(payment, function (tokenizeErr, payload) {\n                    if (tokenizeErr) {\n                        console.error('Error during Visa Checkout tokenization', tokenizeErr);\n                    } else {\n                        var billingAddress = payload.billingAddress;\n                        payload.billingAddressString = JSON.stringify({\n                            recipientName: (billingAddress.firstName + ' ' + billingAddress.lastName),\n                            phone: billingAddress.phoneNumber,\n                            countryCodeAlpha2: billingAddress.countryCode,\n                            streetAddress: billingAddress.streetAddress,\n                            extendedAddress: billingAddress.streetAddress,\n                            locality: billingAddress.locality,\n                            region: billingAddress.region,\n                            postalCode: billingAddress.postalCode,\n                            email: payload.userData.userEmailbillingAddress\n                        });\n                        params.onTokenizePayment(payload);\n                    }\n                });\n            });\n        });\n    });\n};\n\nConstructor.prototype.updateAmount = function (amount) {\n    this.params.options.amount = amount;\n};\n\nmodule.exports = {\n    init: function (params, $btn) {\n        bu.clientToken = params.clientToken;\n        return new Constructor(params, $btn);\n    }\n};\n","'use strict';\n\nmodule.exports = function (element) {\n    var position = element && element.length ? element.offset().top : 0;\n    $('html, body').animate({\n        scrollTop: position\n    }, 500);\n    if (!element) {\n        $('.logo-home').focus();\n    }\n};\n","require('./braintree/braintreeMFRA')();\n","var $srcContent = document.querySelector('.js_braintree_srcContent');\nvar $srcSessionAccount = document.querySelector('#sessionSrcAccount');\nvar $srcAccountList = document.querySelector('#braintreeSrcAccountsList');\nvar $srcButton = document.querySelector('.js_braintree_src_button');\nvar $accoutnListBlock = document.querySelector('.braintree_used_src_account');\nvar helper = require('../helper');\n\nfunction srcUpdateAmount(srcIns, config) { // eslint-disable-line require-jsdoc\n    srcIns.loader.show();\n    $.ajax({\n        url: config.getOrderInfoUrl,\n        type: 'get',\n        dataType: 'json',\n        success: function (data) {\n            srcIns.loader.hide();\n            srcIns.updateAmount(data.amount);\n        },\n        error: function () {\n            window.location.reload();\n        }\n    });\n}\n\nfunction setSessionAccountData(cardDescrition) {\n    $srcSessionAccount.value = cardDescrition;\n    $srcSessionAccount.text = cardDescrition;\n    $srcSessionAccount.selected = true;\n    $accoutnListBlock.style.display = 'block';\n    $srcAccountList.dispatchEvent(new Event('change'));\n}\n\nfunction updateSessionAccountDropdown() {\n    if ($srcAccountList.value === 'newaccount') {\n        $srcButton.style.display = 'block';\n        helper.continueButtonToggle(true);\n        $srcContent.setAttribute('data-paypal-is-hide-continue-button', true);\n    } else {\n        $srcButton.style.display = 'none';\n        helper.continueButtonToggle(false);\n        $srcContent.setAttribute('data-paypal-is-hide-continue-button', false);\n    }\n}\n\nfunction initSessionAccountDropdownState() {\n    if ($srcAccountList.value === 'newaccount') {\n        $accoutnListBlock.style.display = 'none';\n    } else {\n        helper.continueButtonToggle(false);\n        $srcContent.setAttribute('data-paypal-is-hide-continue-button', false);\n        $srcButton.style.display = 'none';\n    }\n}\n\nmodule.exports = {\n    srcUpdateAmount,\n    setSessionAccountData,\n    updateSessionAccountDropdown,\n    initSessionAccountDropdownState\n};\n"],"sourceRoot":""}